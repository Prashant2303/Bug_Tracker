// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`When all filters are false snapshot of Issue 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
   
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
       
      <Issue
        displayProps={
          Object {
            "cdateSwitch": false,
            "descSwitch": false,
            "rdateSwitch": false,
            "severitySwitch": false,
            "statusSwitch": false,
          }
        }
        issue={
          Object {
            "cdate": "12/02/2021",
            "desc": "On adding to cart, the item does not get added",
            "id": 4,
            "rdate": "",
            "severity": "Minor",
            "status": "Open",
            "viewed": 33,
          }
        }
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          md={5}
          sm={8}
          xs={12}
        >
          <ForwardRef(Grid)
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-xs-center": "MuiGrid-justify-xs-center",
                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            item={true}
            md={5}
            sm={8}
            xs={12}
          >
            <div
              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-8 MuiGrid-grid-md-5"
            >
              <WithStyles(ForwardRef(Card))
                className="makeStyles-root-1"
                elevation={5}
                variant="elevation"
              >
                <ForwardRef(Card)
                  className="makeStyles-root-1"
                  classes={
                    Object {
                      "root": "MuiCard-root",
                    }
                  }
                  elevation={5}
                  variant="elevation"
                >
                  <WithStyles(ForwardRef(Paper))
                    className="MuiCard-root makeStyles-root-1"
                    elevation={5}
                    variant="elevation"
                  >
                    <ForwardRef(Paper)
                      className="MuiCard-root makeStyles-root-1"
                      classes={
                        Object {
                          "elevation0": "MuiPaper-elevation0",
                          "elevation1": "MuiPaper-elevation1",
                          "elevation10": "MuiPaper-elevation10",
                          "elevation11": "MuiPaper-elevation11",
                          "elevation12": "MuiPaper-elevation12",
                          "elevation13": "MuiPaper-elevation13",
                          "elevation14": "MuiPaper-elevation14",
                          "elevation15": "MuiPaper-elevation15",
                          "elevation16": "MuiPaper-elevation16",
                          "elevation17": "MuiPaper-elevation17",
                          "elevation18": "MuiPaper-elevation18",
                          "elevation19": "MuiPaper-elevation19",
                          "elevation2": "MuiPaper-elevation2",
                          "elevation20": "MuiPaper-elevation20",
                          "elevation21": "MuiPaper-elevation21",
                          "elevation22": "MuiPaper-elevation22",
                          "elevation23": "MuiPaper-elevation23",
                          "elevation24": "MuiPaper-elevation24",
                          "elevation3": "MuiPaper-elevation3",
                          "elevation4": "MuiPaper-elevation4",
                          "elevation5": "MuiPaper-elevation5",
                          "elevation6": "MuiPaper-elevation6",
                          "elevation7": "MuiPaper-elevation7",
                          "elevation8": "MuiPaper-elevation8",
                          "elevation9": "MuiPaper-elevation9",
                          "outlined": "MuiPaper-outlined",
                          "root": "MuiPaper-root",
                          "rounded": "MuiPaper-rounded",
                        }
                      }
                      elevation={5}
                      variant="elevation"
                    >
                      <div
                        className="MuiPaper-root MuiCard-root makeStyles-root-1 MuiPaper-elevation5 MuiPaper-rounded"
                      >
                        <WithStyles(ForwardRef(CardHeader))
                          action={
                            <WithStyles(ForwardRef(CardActions))>
                              <WithStyles(ForwardRef(IconButton))
                                aria-label="Edit"
                                onClick={[Function]}
                              >
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/editIssue",
                                      "state": Object {
                                        "cdate": "12/02/2021",
                                        "desc": "On adding to cart, the item does not get added",
                                        "id": 4,
                                        "rdate": "",
                                        "severity": "Minor",
                                        "status": "Open",
                                        "viewed": 33,
                                      },
                                    }
                                  }
                                >
                                  <Memo
                                    color="primary"
                                  />
                                </Link>
                              </WithStyles(ForwardRef(IconButton))>
                              <WithStyles(ForwardRef(IconButton))
                                aria-label="Delete"
                                onClick={[Function]}
                              >
                                <Memo
                                  color="error"
                                />
                              </WithStyles(ForwardRef(IconButton))>
                              <WithStyles(ForwardRef(IconButton))
                                aria-label="Details"
                                onClick={[Function]}
                              >
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/issueDetails",
                                      "state": Object {
                                        "cdate": "12/02/2021",
                                        "desc": "On adding to cart, the item does not get added",
                                        "id": 4,
                                        "rdate": "",
                                        "severity": "Minor",
                                        "status": "Open",
                                        "viewed": 33,
                                      },
                                    }
                                  }
                                >
                                  <Memo
                                    color="primary"
                                  />
                                </Link>
                              </WithStyles(ForwardRef(IconButton))>
                            </WithStyles(ForwardRef(CardActions))>
                          }
                          title="Id - 4"
                        >
                          <ForwardRef(CardHeader)
                            action={
                              <WithStyles(ForwardRef(CardActions))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="Edit"
                                  onClick={[Function]}
                                >
                                  <Link
                                    to={
                                      Object {
                                        "pathname": "/editIssue",
                                        "state": Object {
                                          "cdate": "12/02/2021",
                                          "desc": "On adding to cart, the item does not get added",
                                          "id": 4,
                                          "rdate": "",
                                          "severity": "Minor",
                                          "status": "Open",
                                          "viewed": 33,
                                        },
                                      }
                                    }
                                  >
                                    <Memo
                                      color="primary"
                                    />
                                  </Link>
                                </WithStyles(ForwardRef(IconButton))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="Delete"
                                  onClick={[Function]}
                                >
                                  <Memo
                                    color="error"
                                  />
                                </WithStyles(ForwardRef(IconButton))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="Details"
                                  onClick={[Function]}
                                >
                                  <Link
                                    to={
                                      Object {
                                        "pathname": "/issueDetails",
                                        "state": Object {
                                          "cdate": "12/02/2021",
                                          "desc": "On adding to cart, the item does not get added",
                                          "id": 4,
                                          "rdate": "",
                                          "severity": "Minor",
                                          "status": "Open",
                                          "viewed": 33,
                                        },
                                      }
                                    }
                                  >
                                    <Memo
                                      color="primary"
                                    />
                                  </Link>
                                </WithStyles(ForwardRef(IconButton))>
                              </WithStyles(ForwardRef(CardActions))>
                            }
                            classes={
                              Object {
                                "action": "MuiCardHeader-action",
                                "avatar": "MuiCardHeader-avatar",
                                "content": "MuiCardHeader-content",
                                "root": "MuiCardHeader-root",
                                "subheader": "MuiCardHeader-subheader",
                                "title": "MuiCardHeader-title",
                              }
                            }
                            title="Id - 4"
                          >
                            <div
                              className="MuiCardHeader-root"
                            >
                              <div
                                className="MuiCardHeader-content"
                              >
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiCardHeader-title"
                                  component="span"
                                  display="block"
                                  variant="h5"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiCardHeader-title"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    component="span"
                                    display="block"
                                    variant="h5"
                                  >
                                    <span
                                      className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
                                    >
                                      Id - 4
                                    </span>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                              <div
                                className="MuiCardHeader-action"
                              >
                                <WithStyles(ForwardRef(CardActions))>
                                  <ForwardRef(CardActions)
                                    classes={
                                      Object {
                                        "root": "MuiCardActions-root",
                                        "spacing": "MuiCardActions-spacing",
                                      }
                                    }
                                  >
                                    <div
                                      className="MuiCardActions-root MuiCardActions-spacing"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        aria-label="Edit"
                                        onClick={[Function]}
                                      >
                                        <ForwardRef(IconButton)
                                          aria-label="Edit"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          onClick={[Function]}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            aria-label="Edit"
                                            centerRipple={true}
                                            className="MuiIconButton-root"
                                            disabled={false}
                                            focusRipple={true}
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              aria-label="Edit"
                                              centerRipple={true}
                                              className="MuiIconButton-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              disabled={false}
                                              focusRipple={true}
                                              onClick={[Function]}
                                            >
                                              <button
                                                aria-label="Edit"
                                                className="MuiButtonBase-root MuiIconButton-root"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <Link
                                                    to={
                                                      Object {
                                                        "pathname": "/editIssue",
                                                        "state": Object {
                                                          "cdate": "12/02/2021",
                                                          "desc": "On adding to cart, the item does not get added",
                                                          "id": 4,
                                                          "rdate": "",
                                                          "severity": "Minor",
                                                          "status": "Open",
                                                          "viewed": 33,
                                                        },
                                                      }
                                                    }
                                                  >
                                                    <LinkAnchor
                                                      href="/editIssue"
                                                      navigate={[Function]}
                                                    >
                                                      <a
                                                        href="/editIssue"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(EditRoundedIcon)
                                                          color="primary"
                                                        >
                                                          <WithStyles(ForwardRef(SvgIcon))
                                                            color="primary"
                                                          >
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                              color="primary"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M3 17.46v3.04c0 .28.22.5.5.5h3.04c.13 0 .26-.05.35-.15L17.81 9.94l-3.75-3.75L3.15 17.1c-.1.1-.15.22-.15.36zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef(EditRoundedIcon)>
                                                      </a>
                                                    </LinkAnchor>
                                                  </Link>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                      <WithStyles(ForwardRef(IconButton))
                                        aria-label="Delete"
                                        onClick={[Function]}
                                      >
                                        <ForwardRef(IconButton)
                                          aria-label="Delete"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          onClick={[Function]}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            aria-label="Delete"
                                            centerRipple={true}
                                            className="MuiIconButton-root"
                                            disabled={false}
                                            focusRipple={true}
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              aria-label="Delete"
                                              centerRipple={true}
                                              className="MuiIconButton-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              disabled={false}
                                              focusRipple={true}
                                              onClick={[Function]}
                                            >
                                              <button
                                                aria-label="Delete"
                                                className="MuiButtonBase-root MuiIconButton-root"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <ForwardRef(DeleteForeverRoundedIcon)
                                                    color="error"
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      color="error"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                        color="error"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiSvgIcon-colorError"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v10zm3.17-7.83c.39-.39 1.02-.39 1.41 0L12 12.59l1.42-1.42c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41L13.41 14l1.42 1.42c.39.39.39 1.02 0 1.41-.39.39-1.02.39-1.41 0L12 15.41l-1.42 1.42c-.39.39-1.02.39-1.41 0a.9959.9959 0 010-1.41L10.59 14l-1.42-1.42c-.39-.38-.39-1.02 0-1.41zM15.5 4l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1h-2.5z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(DeleteForeverRoundedIcon)>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                      <WithStyles(ForwardRef(IconButton))
                                        aria-label="Details"
                                        onClick={[Function]}
                                      >
                                        <ForwardRef(IconButton)
                                          aria-label="Details"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          onClick={[Function]}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            aria-label="Details"
                                            centerRipple={true}
                                            className="MuiIconButton-root"
                                            disabled={false}
                                            focusRipple={true}
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              aria-label="Details"
                                              centerRipple={true}
                                              className="MuiIconButton-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              disabled={false}
                                              focusRipple={true}
                                              onClick={[Function]}
                                            >
                                              <button
                                                aria-label="Details"
                                                className="MuiButtonBase-root MuiIconButton-root"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <Link
                                                    to={
                                                      Object {
                                                        "pathname": "/issueDetails",
                                                        "state": Object {
                                                          "cdate": "12/02/2021",
                                                          "desc": "On adding to cart, the item does not get added",
                                                          "id": 4,
                                                          "rdate": "",
                                                          "severity": "Minor",
                                                          "status": "Open",
                                                          "viewed": 33,
                                                        },
                                                      }
                                                    }
                                                  >
                                                    <LinkAnchor
                                                      href="/issueDetails"
                                                      navigate={[Function]}
                                                    >
                                                      <a
                                                        href="/issueDetails"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(LaunchRoundedIcon)
                                                          color="primary"
                                                        >
                                                          <WithStyles(ForwardRef(SvgIcon))
                                                            color="primary"
                                                          >
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                              color="primary"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M18 19H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h5c.55 0 1-.45 1-1s-.45-1-1-1H5c-1.11 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-6c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55-.45 1-1 1zM14 4c0 .55.45 1 1 1h2.59l-9.13 9.13c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L19 6.41V9c0 .55.45 1 1 1s1-.45 1-1V3h-6c-.55 0-1 .45-1 1z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef(LaunchRoundedIcon)>
                                                      </a>
                                                    </LinkAnchor>
                                                  </Link>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </div>
                                  </ForwardRef(CardActions)>
                                </WithStyles(ForwardRef(CardActions))>
                              </div>
                            </div>
                          </ForwardRef(CardHeader)>
                        </WithStyles(ForwardRef(CardHeader))>
                        <WithStyles(ForwardRef(CardContent))
                          align="center"
                        >
                          <ForwardRef(CardContent)
                            align="center"
                            classes={
                              Object {
                                "root": "MuiCardContent-root",
                              }
                            }
                          >
                            <div
                              align="center"
                              className="MuiCardContent-root"
                            />
                          </ForwardRef(CardContent)>
                        </WithStyles(ForwardRef(CardContent))>
                      </div>
                    </ForwardRef(Paper)>
                  </WithStyles(ForwardRef(Paper))>
                </ForwardRef(Card)>
              </WithStyles(ForwardRef(Card))>
            </div>
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
      </Issue>
       
    </Router>
  </BrowserRouter>
   
</Provider>
`;

exports[`When all filters are true snapshot of Issue 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
   
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
       
      <Issue
        displayProps={
          Object {
            "cdateSwitch": true,
            "descSwitch": true,
            "rdateSwitch": true,
            "severitySwitch": true,
            "statusSwitch": true,
          }
        }
        issue={
          Object {
            "cdate": "12/02/2021",
            "desc": "On adding to cart, the item does not get added",
            "id": 4,
            "rdate": "",
            "severity": "Minor",
            "status": "Open",
            "viewed": 33,
          }
        }
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          md={5}
          sm={8}
          xs={12}
        >
          <ForwardRef(Grid)
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-xs-center": "MuiGrid-justify-xs-center",
                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            item={true}
            md={5}
            sm={8}
            xs={12}
          >
            <div
              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-8 MuiGrid-grid-md-5"
            >
              <WithStyles(ForwardRef(Card))
                className="makeStyles-root-1"
                elevation={5}
                variant="elevation"
              >
                <ForwardRef(Card)
                  className="makeStyles-root-1"
                  classes={
                    Object {
                      "root": "MuiCard-root",
                    }
                  }
                  elevation={5}
                  variant="elevation"
                >
                  <WithStyles(ForwardRef(Paper))
                    className="MuiCard-root makeStyles-root-1"
                    elevation={5}
                    variant="elevation"
                  >
                    <ForwardRef(Paper)
                      className="MuiCard-root makeStyles-root-1"
                      classes={
                        Object {
                          "elevation0": "MuiPaper-elevation0",
                          "elevation1": "MuiPaper-elevation1",
                          "elevation10": "MuiPaper-elevation10",
                          "elevation11": "MuiPaper-elevation11",
                          "elevation12": "MuiPaper-elevation12",
                          "elevation13": "MuiPaper-elevation13",
                          "elevation14": "MuiPaper-elevation14",
                          "elevation15": "MuiPaper-elevation15",
                          "elevation16": "MuiPaper-elevation16",
                          "elevation17": "MuiPaper-elevation17",
                          "elevation18": "MuiPaper-elevation18",
                          "elevation19": "MuiPaper-elevation19",
                          "elevation2": "MuiPaper-elevation2",
                          "elevation20": "MuiPaper-elevation20",
                          "elevation21": "MuiPaper-elevation21",
                          "elevation22": "MuiPaper-elevation22",
                          "elevation23": "MuiPaper-elevation23",
                          "elevation24": "MuiPaper-elevation24",
                          "elevation3": "MuiPaper-elevation3",
                          "elevation4": "MuiPaper-elevation4",
                          "elevation5": "MuiPaper-elevation5",
                          "elevation6": "MuiPaper-elevation6",
                          "elevation7": "MuiPaper-elevation7",
                          "elevation8": "MuiPaper-elevation8",
                          "elevation9": "MuiPaper-elevation9",
                          "outlined": "MuiPaper-outlined",
                          "root": "MuiPaper-root",
                          "rounded": "MuiPaper-rounded",
                        }
                      }
                      elevation={5}
                      variant="elevation"
                    >
                      <div
                        className="MuiPaper-root MuiCard-root makeStyles-root-1 MuiPaper-elevation5 MuiPaper-rounded"
                      >
                        <WithStyles(ForwardRef(CardHeader))
                          action={
                            <WithStyles(ForwardRef(CardActions))>
                              <WithStyles(ForwardRef(IconButton))
                                aria-label="Edit"
                                onClick={[Function]}
                              >
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/editIssue",
                                      "state": Object {
                                        "cdate": "12/02/2021",
                                        "desc": "On adding to cart, the item does not get added",
                                        "id": 4,
                                        "rdate": "",
                                        "severity": "Minor",
                                        "status": "Open",
                                        "viewed": 33,
                                      },
                                    }
                                  }
                                >
                                  <Memo
                                    color="primary"
                                  />
                                </Link>
                              </WithStyles(ForwardRef(IconButton))>
                              <WithStyles(ForwardRef(IconButton))
                                aria-label="Delete"
                                onClick={[Function]}
                              >
                                <Memo
                                  color="error"
                                />
                              </WithStyles(ForwardRef(IconButton))>
                              <WithStyles(ForwardRef(IconButton))
                                aria-label="Details"
                                onClick={[Function]}
                              >
                                <Link
                                  to={
                                    Object {
                                      "pathname": "/issueDetails",
                                      "state": Object {
                                        "cdate": "12/02/2021",
                                        "desc": "On adding to cart, the item does not get added",
                                        "id": 4,
                                        "rdate": "",
                                        "severity": "Minor",
                                        "status": "Open",
                                        "viewed": 33,
                                      },
                                    }
                                  }
                                >
                                  <Memo
                                    color="primary"
                                  />
                                </Link>
                              </WithStyles(ForwardRef(IconButton))>
                            </WithStyles(ForwardRef(CardActions))>
                          }
                          title="Id - 4"
                        >
                          <ForwardRef(CardHeader)
                            action={
                              <WithStyles(ForwardRef(CardActions))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="Edit"
                                  onClick={[Function]}
                                >
                                  <Link
                                    to={
                                      Object {
                                        "pathname": "/editIssue",
                                        "state": Object {
                                          "cdate": "12/02/2021",
                                          "desc": "On adding to cart, the item does not get added",
                                          "id": 4,
                                          "rdate": "",
                                          "severity": "Minor",
                                          "status": "Open",
                                          "viewed": 33,
                                        },
                                      }
                                    }
                                  >
                                    <Memo
                                      color="primary"
                                    />
                                  </Link>
                                </WithStyles(ForwardRef(IconButton))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="Delete"
                                  onClick={[Function]}
                                >
                                  <Memo
                                    color="error"
                                  />
                                </WithStyles(ForwardRef(IconButton))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="Details"
                                  onClick={[Function]}
                                >
                                  <Link
                                    to={
                                      Object {
                                        "pathname": "/issueDetails",
                                        "state": Object {
                                          "cdate": "12/02/2021",
                                          "desc": "On adding to cart, the item does not get added",
                                          "id": 4,
                                          "rdate": "",
                                          "severity": "Minor",
                                          "status": "Open",
                                          "viewed": 33,
                                        },
                                      }
                                    }
                                  >
                                    <Memo
                                      color="primary"
                                    />
                                  </Link>
                                </WithStyles(ForwardRef(IconButton))>
                              </WithStyles(ForwardRef(CardActions))>
                            }
                            classes={
                              Object {
                                "action": "MuiCardHeader-action",
                                "avatar": "MuiCardHeader-avatar",
                                "content": "MuiCardHeader-content",
                                "root": "MuiCardHeader-root",
                                "subheader": "MuiCardHeader-subheader",
                                "title": "MuiCardHeader-title",
                              }
                            }
                            title="Id - 4"
                          >
                            <div
                              className="MuiCardHeader-root"
                            >
                              <div
                                className="MuiCardHeader-content"
                              >
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiCardHeader-title"
                                  component="span"
                                  display="block"
                                  variant="h5"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiCardHeader-title"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    component="span"
                                    display="block"
                                    variant="h5"
                                  >
                                    <span
                                      className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
                                    >
                                      Id - 4
                                    </span>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                              <div
                                className="MuiCardHeader-action"
                              >
                                <WithStyles(ForwardRef(CardActions))>
                                  <ForwardRef(CardActions)
                                    classes={
                                      Object {
                                        "root": "MuiCardActions-root",
                                        "spacing": "MuiCardActions-spacing",
                                      }
                                    }
                                  >
                                    <div
                                      className="MuiCardActions-root MuiCardActions-spacing"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        aria-label="Edit"
                                        onClick={[Function]}
                                      >
                                        <ForwardRef(IconButton)
                                          aria-label="Edit"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          onClick={[Function]}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            aria-label="Edit"
                                            centerRipple={true}
                                            className="MuiIconButton-root"
                                            disabled={false}
                                            focusRipple={true}
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              aria-label="Edit"
                                              centerRipple={true}
                                              className="MuiIconButton-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              disabled={false}
                                              focusRipple={true}
                                              onClick={[Function]}
                                            >
                                              <button
                                                aria-label="Edit"
                                                className="MuiButtonBase-root MuiIconButton-root"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <Link
                                                    to={
                                                      Object {
                                                        "pathname": "/editIssue",
                                                        "state": Object {
                                                          "cdate": "12/02/2021",
                                                          "desc": "On adding to cart, the item does not get added",
                                                          "id": 4,
                                                          "rdate": "",
                                                          "severity": "Minor",
                                                          "status": "Open",
                                                          "viewed": 33,
                                                        },
                                                      }
                                                    }
                                                  >
                                                    <LinkAnchor
                                                      href="/editIssue"
                                                      navigate={[Function]}
                                                    >
                                                      <a
                                                        href="/editIssue"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(EditRoundedIcon)
                                                          color="primary"
                                                        >
                                                          <WithStyles(ForwardRef(SvgIcon))
                                                            color="primary"
                                                          >
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                              color="primary"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M3 17.46v3.04c0 .28.22.5.5.5h3.04c.13 0 .26-.05.35-.15L17.81 9.94l-3.75-3.75L3.15 17.1c-.1.1-.15.22-.15.36zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef(EditRoundedIcon)>
                                                      </a>
                                                    </LinkAnchor>
                                                  </Link>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                      <WithStyles(ForwardRef(IconButton))
                                        aria-label="Delete"
                                        onClick={[Function]}
                                      >
                                        <ForwardRef(IconButton)
                                          aria-label="Delete"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          onClick={[Function]}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            aria-label="Delete"
                                            centerRipple={true}
                                            className="MuiIconButton-root"
                                            disabled={false}
                                            focusRipple={true}
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              aria-label="Delete"
                                              centerRipple={true}
                                              className="MuiIconButton-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              disabled={false}
                                              focusRipple={true}
                                              onClick={[Function]}
                                            >
                                              <button
                                                aria-label="Delete"
                                                className="MuiButtonBase-root MuiIconButton-root"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <ForwardRef(DeleteForeverRoundedIcon)
                                                    color="error"
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      color="error"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                        color="error"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiSvgIcon-colorError"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v10zm3.17-7.83c.39-.39 1.02-.39 1.41 0L12 12.59l1.42-1.42c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41L13.41 14l1.42 1.42c.39.39.39 1.02 0 1.41-.39.39-1.02.39-1.41 0L12 15.41l-1.42 1.42c-.39.39-1.02.39-1.41 0a.9959.9959 0 010-1.41L10.59 14l-1.42-1.42c-.39-.38-.39-1.02 0-1.41zM15.5 4l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1h-2.5z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(DeleteForeverRoundedIcon)>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                      <WithStyles(ForwardRef(IconButton))
                                        aria-label="Details"
                                        onClick={[Function]}
                                      >
                                        <ForwardRef(IconButton)
                                          aria-label="Details"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          onClick={[Function]}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            aria-label="Details"
                                            centerRipple={true}
                                            className="MuiIconButton-root"
                                            disabled={false}
                                            focusRipple={true}
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              aria-label="Details"
                                              centerRipple={true}
                                              className="MuiIconButton-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              disabled={false}
                                              focusRipple={true}
                                              onClick={[Function]}
                                            >
                                              <button
                                                aria-label="Details"
                                                className="MuiButtonBase-root MuiIconButton-root"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <Link
                                                    to={
                                                      Object {
                                                        "pathname": "/issueDetails",
                                                        "state": Object {
                                                          "cdate": "12/02/2021",
                                                          "desc": "On adding to cart, the item does not get added",
                                                          "id": 4,
                                                          "rdate": "",
                                                          "severity": "Minor",
                                                          "status": "Open",
                                                          "viewed": 33,
                                                        },
                                                      }
                                                    }
                                                  >
                                                    <LinkAnchor
                                                      href="/issueDetails"
                                                      navigate={[Function]}
                                                    >
                                                      <a
                                                        href="/issueDetails"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(LaunchRoundedIcon)
                                                          color="primary"
                                                        >
                                                          <WithStyles(ForwardRef(SvgIcon))
                                                            color="primary"
                                                          >
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                              color="primary"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M18 19H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h5c.55 0 1-.45 1-1s-.45-1-1-1H5c-1.11 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-6c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55-.45 1-1 1zM14 4c0 .55.45 1 1 1h2.59l-9.13 9.13c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L19 6.41V9c0 .55.45 1 1 1s1-.45 1-1V3h-6c-.55 0-1 .45-1 1z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef(LaunchRoundedIcon)>
                                                      </a>
                                                    </LinkAnchor>
                                                  </Link>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </div>
                                  </ForwardRef(CardActions)>
                                </WithStyles(ForwardRef(CardActions))>
                              </div>
                            </div>
                          </ForwardRef(CardHeader)>
                        </WithStyles(ForwardRef(CardHeader))>
                        <WithStyles(ForwardRef(CardContent))
                          align="center"
                        >
                          <ForwardRef(CardContent)
                            align="center"
                            classes={
                              Object {
                                "root": "MuiCardContent-root",
                              }
                            }
                          >
                            <div
                              align="center"
                              className="MuiCardContent-root"
                            >
                              <WithStyles(ForwardRef(Typography))
                                component="p"
                                variant="h6"
                              >
                                <ForwardRef(Typography)
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  component="p"
                                  variant="h6"
                                >
                                  <p
                                    className="MuiTypography-root MuiTypography-h6"
                                  >
                                    <span
                                      className="makeStyles-span-3"
                                    >
                                      Description - 
                                    </span>
                                    On adding to cart, the item does not get added
                                  </p>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <WithStyles(ForwardRef(Typography))
                                color="textPrimary"
                                variant="h6"
                              >
                                <ForwardRef(Typography)
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  color="textPrimary"
                                  variant="h6"
                                >
                                  <h6
                                    className="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                                  >
                                    <span
                                      className="makeStyles-span-3"
                                    >
                                      Severity - 
                                    </span>
                                    Minor
                                  </h6>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <WithStyles(ForwardRef(Typography))
                                color="textPrimary"
                                variant="h6"
                              >
                                <ForwardRef(Typography)
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  color="textPrimary"
                                  variant="h6"
                                >
                                  <h6
                                    className="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                                  >
                                    <span
                                      className="makeStyles-span-3"
                                    >
                                      Status - 
                                    </span>
                                    Open
                                  </h6>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <WithStyles(ForwardRef(Typography))
                                color="textPrimary"
                                variant="h6"
                              >
                                <ForwardRef(Typography)
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  color="textPrimary"
                                  variant="h6"
                                >
                                  <h6
                                    className="MuiTypography-root MuiTypography-h6 MuiTypography-colorTextPrimary"
                                  >
                                    <span
                                      className="makeStyles-span-3"
                                    >
                                      Created On - 
                                    </span>
                                    12/02/2021
                                  </h6>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </div>
                          </ForwardRef(CardContent)>
                        </WithStyles(ForwardRef(CardContent))>
                      </div>
                    </ForwardRef(Paper)>
                  </WithStyles(ForwardRef(Paper))>
                </ForwardRef(Card)>
              </WithStyles(ForwardRef(Card))>
            </div>
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
      </Issue>
       
    </Router>
  </BrowserRouter>
   
</Provider>
`;
