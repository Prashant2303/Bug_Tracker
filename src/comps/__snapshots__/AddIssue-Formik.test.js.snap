// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddIssue snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
   
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
       
      <AddIssueFormik>
        <WithStyles(ForwardRef(Paper))
          className="makeStyles-paper-2"
          elevation={5}
          xs={12}
        >
          <ForwardRef(Paper)
            className="makeStyles-paper-2"
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0",
                "elevation1": "MuiPaper-elevation1",
                "elevation10": "MuiPaper-elevation10",
                "elevation11": "MuiPaper-elevation11",
                "elevation12": "MuiPaper-elevation12",
                "elevation13": "MuiPaper-elevation13",
                "elevation14": "MuiPaper-elevation14",
                "elevation15": "MuiPaper-elevation15",
                "elevation16": "MuiPaper-elevation16",
                "elevation17": "MuiPaper-elevation17",
                "elevation18": "MuiPaper-elevation18",
                "elevation19": "MuiPaper-elevation19",
                "elevation2": "MuiPaper-elevation2",
                "elevation20": "MuiPaper-elevation20",
                "elevation21": "MuiPaper-elevation21",
                "elevation22": "MuiPaper-elevation22",
                "elevation23": "MuiPaper-elevation23",
                "elevation24": "MuiPaper-elevation24",
                "elevation3": "MuiPaper-elevation3",
                "elevation4": "MuiPaper-elevation4",
                "elevation5": "MuiPaper-elevation5",
                "elevation6": "MuiPaper-elevation6",
                "elevation7": "MuiPaper-elevation7",
                "elevation8": "MuiPaper-elevation8",
                "elevation9": "MuiPaper-elevation9",
                "outlined": "MuiPaper-outlined",
                "root": "MuiPaper-root",
                "rounded": "MuiPaper-rounded",
              }
            }
            elevation={5}
            xs={12}
          >
            <div
              className="MuiPaper-root makeStyles-paper-2 MuiPaper-elevation5 MuiPaper-rounded"
              xs={12}
            >
              <Prompt
                message="Are you sure you want to leave?"
                when={true}
              >
                <Lifecycle
                  message="Are you sure you want to leave?"
                  onMount={[Function]}
                  onUnmount={[Function]}
                  onUpdate={[Function]}
                />
              </Prompt>
              <h2
                className="makeStyles-heading-4"
              >
                Enter issue details
              </h2>
              <WithStyles(ForwardRef(Grid))
                item={true}
                xs={12}
              >
                <ForwardRef(Grid)
                  classes={
                    Object {
                      "align-content-xs-center": "MuiGrid-align-content-xs-center",
                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                      "align-items-xs-center": "MuiGrid-align-items-xs-center",
                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                      "container": "MuiGrid-container",
                      "direction-xs-column": "MuiGrid-direction-xs-column",
                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                      "grid-lg-1": "MuiGrid-grid-lg-1",
                      "grid-lg-10": "MuiGrid-grid-lg-10",
                      "grid-lg-11": "MuiGrid-grid-lg-11",
                      "grid-lg-12": "MuiGrid-grid-lg-12",
                      "grid-lg-2": "MuiGrid-grid-lg-2",
                      "grid-lg-3": "MuiGrid-grid-lg-3",
                      "grid-lg-4": "MuiGrid-grid-lg-4",
                      "grid-lg-5": "MuiGrid-grid-lg-5",
                      "grid-lg-6": "MuiGrid-grid-lg-6",
                      "grid-lg-7": "MuiGrid-grid-lg-7",
                      "grid-lg-8": "MuiGrid-grid-lg-8",
                      "grid-lg-9": "MuiGrid-grid-lg-9",
                      "grid-lg-auto": "MuiGrid-grid-lg-auto",
                      "grid-lg-true": "MuiGrid-grid-lg-true",
                      "grid-md-1": "MuiGrid-grid-md-1",
                      "grid-md-10": "MuiGrid-grid-md-10",
                      "grid-md-11": "MuiGrid-grid-md-11",
                      "grid-md-12": "MuiGrid-grid-md-12",
                      "grid-md-2": "MuiGrid-grid-md-2",
                      "grid-md-3": "MuiGrid-grid-md-3",
                      "grid-md-4": "MuiGrid-grid-md-4",
                      "grid-md-5": "MuiGrid-grid-md-5",
                      "grid-md-6": "MuiGrid-grid-md-6",
                      "grid-md-7": "MuiGrid-grid-md-7",
                      "grid-md-8": "MuiGrid-grid-md-8",
                      "grid-md-9": "MuiGrid-grid-md-9",
                      "grid-md-auto": "MuiGrid-grid-md-auto",
                      "grid-md-true": "MuiGrid-grid-md-true",
                      "grid-sm-1": "MuiGrid-grid-sm-1",
                      "grid-sm-10": "MuiGrid-grid-sm-10",
                      "grid-sm-11": "MuiGrid-grid-sm-11",
                      "grid-sm-12": "MuiGrid-grid-sm-12",
                      "grid-sm-2": "MuiGrid-grid-sm-2",
                      "grid-sm-3": "MuiGrid-grid-sm-3",
                      "grid-sm-4": "MuiGrid-grid-sm-4",
                      "grid-sm-5": "MuiGrid-grid-sm-5",
                      "grid-sm-6": "MuiGrid-grid-sm-6",
                      "grid-sm-7": "MuiGrid-grid-sm-7",
                      "grid-sm-8": "MuiGrid-grid-sm-8",
                      "grid-sm-9": "MuiGrid-grid-sm-9",
                      "grid-sm-auto": "MuiGrid-grid-sm-auto",
                      "grid-sm-true": "MuiGrid-grid-sm-true",
                      "grid-xl-1": "MuiGrid-grid-xl-1",
                      "grid-xl-10": "MuiGrid-grid-xl-10",
                      "grid-xl-11": "MuiGrid-grid-xl-11",
                      "grid-xl-12": "MuiGrid-grid-xl-12",
                      "grid-xl-2": "MuiGrid-grid-xl-2",
                      "grid-xl-3": "MuiGrid-grid-xl-3",
                      "grid-xl-4": "MuiGrid-grid-xl-4",
                      "grid-xl-5": "MuiGrid-grid-xl-5",
                      "grid-xl-6": "MuiGrid-grid-xl-6",
                      "grid-xl-7": "MuiGrid-grid-xl-7",
                      "grid-xl-8": "MuiGrid-grid-xl-8",
                      "grid-xl-9": "MuiGrid-grid-xl-9",
                      "grid-xl-auto": "MuiGrid-grid-xl-auto",
                      "grid-xl-true": "MuiGrid-grid-xl-true",
                      "grid-xs-1": "MuiGrid-grid-xs-1",
                      "grid-xs-10": "MuiGrid-grid-xs-10",
                      "grid-xs-11": "MuiGrid-grid-xs-11",
                      "grid-xs-12": "MuiGrid-grid-xs-12",
                      "grid-xs-2": "MuiGrid-grid-xs-2",
                      "grid-xs-3": "MuiGrid-grid-xs-3",
                      "grid-xs-4": "MuiGrid-grid-xs-4",
                      "grid-xs-5": "MuiGrid-grid-xs-5",
                      "grid-xs-6": "MuiGrid-grid-xs-6",
                      "grid-xs-7": "MuiGrid-grid-xs-7",
                      "grid-xs-8": "MuiGrid-grid-xs-8",
                      "grid-xs-9": "MuiGrid-grid-xs-9",
                      "grid-xs-auto": "MuiGrid-grid-xs-auto",
                      "grid-xs-true": "MuiGrid-grid-xs-true",
                      "item": "MuiGrid-item",
                      "justify-xs-center": "MuiGrid-justify-xs-center",
                      "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                      "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                      "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                      "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                      "root": "MuiGrid-root",
                      "spacing-xs-1": "MuiGrid-spacing-xs-1",
                      "spacing-xs-10": "MuiGrid-spacing-xs-10",
                      "spacing-xs-2": "MuiGrid-spacing-xs-2",
                      "spacing-xs-3": "MuiGrid-spacing-xs-3",
                      "spacing-xs-4": "MuiGrid-spacing-xs-4",
                      "spacing-xs-5": "MuiGrid-spacing-xs-5",
                      "spacing-xs-6": "MuiGrid-spacing-xs-6",
                      "spacing-xs-7": "MuiGrid-spacing-xs-7",
                      "spacing-xs-8": "MuiGrid-spacing-xs-8",
                      "spacing-xs-9": "MuiGrid-spacing-xs-9",
                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                      "zeroMinWidth": "MuiGrid-zeroMinWidth",
                    }
                  }
                  item={true}
                  xs={12}
                >
                  <div
                    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                  >
                    <WithStyles(ForwardRef(Container))
                      className="makeStyles-container-3"
                    >
                      <ForwardRef(Container)
                        className="makeStyles-container-3"
                        classes={
                          Object {
                            "disableGutters": "MuiContainer-disableGutters",
                            "fixed": "MuiContainer-fixed",
                            "maxWidthLg": "MuiContainer-maxWidthLg",
                            "maxWidthMd": "MuiContainer-maxWidthMd",
                            "maxWidthSm": "MuiContainer-maxWidthSm",
                            "maxWidthXl": "MuiContainer-maxWidthXl",
                            "maxWidthXs": "MuiContainer-maxWidthXs",
                            "root": "MuiContainer-root",
                          }
                        }
                      >
                        <div
                          className="MuiContainer-root makeStyles-container-3 MuiContainer-maxWidthLg"
                        >
                          <Formik
                            initialValues={
                              Object {
                                "cdate": "",
                                "desc": "",
                                "rdate": "",
                                "severity": "",
                                "status": "",
                              }
                            }
                            onSubmit={[Function]}
                            validationSchema={
                              ObjectSchema {
                                "_blacklist": ReferenceSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_excludedEdges": Array [],
                                "_mutate": undefined,
                                "_nodes": Array [
                                  "rdate",
                                  "cdate",
                                  "status",
                                  "severity",
                                  "desc",
                                ],
                                "_sortErrors": [Function],
                                "_typeError": [Function],
                                "_whitelist": ReferenceSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "conditions": Array [],
                                "deps": Array [],
                                "exclusiveTests": Object {},
                                "fields": Object {
                                  "cdate": StringSchema {
                                    "_blacklist": ReferenceSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_blacklistError": undefined,
                                    "_mutate": undefined,
                                    "_typeError": [Function],
                                    "_whitelist": ReferenceSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_whitelistError": undefined,
                                    "conditions": Array [],
                                    "deps": Array [],
                                    "exclusiveTests": Object {
                                      "matches": false,
                                      "required": true,
                                    },
                                    "spec": Object {
                                      "abortEarly": true,
                                      "nullable": false,
                                      "presence": "required",
                                      "recursive": true,
                                      "strict": false,
                                      "strip": false,
                                    },
                                    "tests": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                    "type": "string",
                                  },
                                  "desc": StringSchema {
                                    "_blacklist": ReferenceSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_blacklistError": undefined,
                                    "_mutate": undefined,
                                    "_typeError": [Function],
                                    "_whitelist": ReferenceSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_whitelistError": undefined,
                                    "conditions": Array [],
                                    "deps": Array [],
                                    "exclusiveTests": Object {
                                      "min": true,
                                      "required": true,
                                    },
                                    "spec": Object {
                                      "abortEarly": true,
                                      "nullable": false,
                                      "presence": "required",
                                      "recursive": true,
                                      "strict": false,
                                      "strip": false,
                                    },
                                    "tests": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                    "type": "string",
                                  },
                                  "rdate": StringSchema {
                                    "_blacklist": ReferenceSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_blacklistError": undefined,
                                    "_typeError": [Function],
                                    "_whitelist": ReferenceSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_whitelistError": undefined,
                                    "conditions": Array [],
                                    "deps": Array [],
                                    "exclusiveTests": Object {
                                      "matches": false,
                                    },
                                    "spec": Object {
                                      "abortEarly": true,
                                      "nullable": false,
                                      "presence": "optional",
                                      "recursive": true,
                                      "strict": false,
                                      "strip": false,
                                    },
                                    "tests": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                    "type": "string",
                                  },
                                  "severity": StringSchema {
                                    "_blacklist": ReferenceSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_blacklistError": undefined,
                                    "_mutate": undefined,
                                    "_typeError": [Function],
                                    "_whitelist": ReferenceSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_whitelistError": undefined,
                                    "conditions": Array [],
                                    "deps": Array [],
                                    "exclusiveTests": Object {
                                      "required": true,
                                    },
                                    "spec": Object {
                                      "abortEarly": true,
                                      "nullable": false,
                                      "presence": "required",
                                      "recursive": true,
                                      "strict": false,
                                      "strip": false,
                                    },
                                    "tests": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                    "type": "string",
                                  },
                                  "status": StringSchema {
                                    "_blacklist": ReferenceSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_blacklistError": undefined,
                                    "_mutate": undefined,
                                    "_typeError": [Function],
                                    "_whitelist": ReferenceSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_whitelistError": undefined,
                                    "conditions": Array [],
                                    "deps": Array [],
                                    "exclusiveTests": Object {
                                      "required": true,
                                    },
                                    "spec": Object {
                                      "abortEarly": true,
                                      "nullable": false,
                                      "presence": "required",
                                      "recursive": true,
                                      "strict": false,
                                      "strip": false,
                                    },
                                    "tests": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                    "type": "string",
                                  },
                                },
                                "spec": Object {
                                  "abortEarly": true,
                                  "nullable": false,
                                  "presence": "optional",
                                  "recursive": true,
                                  "strict": false,
                                  "strip": false,
                                },
                                "tests": Array [],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "object",
                              }
                            }
                          >
                            <Form>
                              <form
                                action="#"
                                onReset={[Function]}
                                onSubmit={[Function]}
                              >
                                <WithStyles(ForwardRef(Grid))
                                  container={true}
                                  spacing={2}
                                >
                                  <ForwardRef(Grid)
                                    classes={
                                      Object {
                                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                        "container": "MuiGrid-container",
                                        "direction-xs-column": "MuiGrid-direction-xs-column",
                                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                        "grid-lg-1": "MuiGrid-grid-lg-1",
                                        "grid-lg-10": "MuiGrid-grid-lg-10",
                                        "grid-lg-11": "MuiGrid-grid-lg-11",
                                        "grid-lg-12": "MuiGrid-grid-lg-12",
                                        "grid-lg-2": "MuiGrid-grid-lg-2",
                                        "grid-lg-3": "MuiGrid-grid-lg-3",
                                        "grid-lg-4": "MuiGrid-grid-lg-4",
                                        "grid-lg-5": "MuiGrid-grid-lg-5",
                                        "grid-lg-6": "MuiGrid-grid-lg-6",
                                        "grid-lg-7": "MuiGrid-grid-lg-7",
                                        "grid-lg-8": "MuiGrid-grid-lg-8",
                                        "grid-lg-9": "MuiGrid-grid-lg-9",
                                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                        "grid-lg-true": "MuiGrid-grid-lg-true",
                                        "grid-md-1": "MuiGrid-grid-md-1",
                                        "grid-md-10": "MuiGrid-grid-md-10",
                                        "grid-md-11": "MuiGrid-grid-md-11",
                                        "grid-md-12": "MuiGrid-grid-md-12",
                                        "grid-md-2": "MuiGrid-grid-md-2",
                                        "grid-md-3": "MuiGrid-grid-md-3",
                                        "grid-md-4": "MuiGrid-grid-md-4",
                                        "grid-md-5": "MuiGrid-grid-md-5",
                                        "grid-md-6": "MuiGrid-grid-md-6",
                                        "grid-md-7": "MuiGrid-grid-md-7",
                                        "grid-md-8": "MuiGrid-grid-md-8",
                                        "grid-md-9": "MuiGrid-grid-md-9",
                                        "grid-md-auto": "MuiGrid-grid-md-auto",
                                        "grid-md-true": "MuiGrid-grid-md-true",
                                        "grid-sm-1": "MuiGrid-grid-sm-1",
                                        "grid-sm-10": "MuiGrid-grid-sm-10",
                                        "grid-sm-11": "MuiGrid-grid-sm-11",
                                        "grid-sm-12": "MuiGrid-grid-sm-12",
                                        "grid-sm-2": "MuiGrid-grid-sm-2",
                                        "grid-sm-3": "MuiGrid-grid-sm-3",
                                        "grid-sm-4": "MuiGrid-grid-sm-4",
                                        "grid-sm-5": "MuiGrid-grid-sm-5",
                                        "grid-sm-6": "MuiGrid-grid-sm-6",
                                        "grid-sm-7": "MuiGrid-grid-sm-7",
                                        "grid-sm-8": "MuiGrid-grid-sm-8",
                                        "grid-sm-9": "MuiGrid-grid-sm-9",
                                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                        "grid-sm-true": "MuiGrid-grid-sm-true",
                                        "grid-xl-1": "MuiGrid-grid-xl-1",
                                        "grid-xl-10": "MuiGrid-grid-xl-10",
                                        "grid-xl-11": "MuiGrid-grid-xl-11",
                                        "grid-xl-12": "MuiGrid-grid-xl-12",
                                        "grid-xl-2": "MuiGrid-grid-xl-2",
                                        "grid-xl-3": "MuiGrid-grid-xl-3",
                                        "grid-xl-4": "MuiGrid-grid-xl-4",
                                        "grid-xl-5": "MuiGrid-grid-xl-5",
                                        "grid-xl-6": "MuiGrid-grid-xl-6",
                                        "grid-xl-7": "MuiGrid-grid-xl-7",
                                        "grid-xl-8": "MuiGrid-grid-xl-8",
                                        "grid-xl-9": "MuiGrid-grid-xl-9",
                                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                        "grid-xl-true": "MuiGrid-grid-xl-true",
                                        "grid-xs-1": "MuiGrid-grid-xs-1",
                                        "grid-xs-10": "MuiGrid-grid-xs-10",
                                        "grid-xs-11": "MuiGrid-grid-xs-11",
                                        "grid-xs-12": "MuiGrid-grid-xs-12",
                                        "grid-xs-2": "MuiGrid-grid-xs-2",
                                        "grid-xs-3": "MuiGrid-grid-xs-3",
                                        "grid-xs-4": "MuiGrid-grid-xs-4",
                                        "grid-xs-5": "MuiGrid-grid-xs-5",
                                        "grid-xs-6": "MuiGrid-grid-xs-6",
                                        "grid-xs-7": "MuiGrid-grid-xs-7",
                                        "grid-xs-8": "MuiGrid-grid-xs-8",
                                        "grid-xs-9": "MuiGrid-grid-xs-9",
                                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                        "grid-xs-true": "MuiGrid-grid-xs-true",
                                        "item": "MuiGrid-item",
                                        "justify-xs-center": "MuiGrid-justify-xs-center",
                                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                        "root": "MuiGrid-root",
                                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                      }
                                    }
                                    container={true}
                                    spacing={2}
                                  >
                                    <div
                                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                                    >
                                      <WithStyles(ForwardRef(Grid))
                                        item={true}
                                        xs={12}
                                      >
                                        <ForwardRef(Grid)
                                          classes={
                                            Object {
                                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                              "container": "MuiGrid-container",
                                              "direction-xs-column": "MuiGrid-direction-xs-column",
                                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                              "grid-lg-1": "MuiGrid-grid-lg-1",
                                              "grid-lg-10": "MuiGrid-grid-lg-10",
                                              "grid-lg-11": "MuiGrid-grid-lg-11",
                                              "grid-lg-12": "MuiGrid-grid-lg-12",
                                              "grid-lg-2": "MuiGrid-grid-lg-2",
                                              "grid-lg-3": "MuiGrid-grid-lg-3",
                                              "grid-lg-4": "MuiGrid-grid-lg-4",
                                              "grid-lg-5": "MuiGrid-grid-lg-5",
                                              "grid-lg-6": "MuiGrid-grid-lg-6",
                                              "grid-lg-7": "MuiGrid-grid-lg-7",
                                              "grid-lg-8": "MuiGrid-grid-lg-8",
                                              "grid-lg-9": "MuiGrid-grid-lg-9",
                                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                              "grid-lg-true": "MuiGrid-grid-lg-true",
                                              "grid-md-1": "MuiGrid-grid-md-1",
                                              "grid-md-10": "MuiGrid-grid-md-10",
                                              "grid-md-11": "MuiGrid-grid-md-11",
                                              "grid-md-12": "MuiGrid-grid-md-12",
                                              "grid-md-2": "MuiGrid-grid-md-2",
                                              "grid-md-3": "MuiGrid-grid-md-3",
                                              "grid-md-4": "MuiGrid-grid-md-4",
                                              "grid-md-5": "MuiGrid-grid-md-5",
                                              "grid-md-6": "MuiGrid-grid-md-6",
                                              "grid-md-7": "MuiGrid-grid-md-7",
                                              "grid-md-8": "MuiGrid-grid-md-8",
                                              "grid-md-9": "MuiGrid-grid-md-9",
                                              "grid-md-auto": "MuiGrid-grid-md-auto",
                                              "grid-md-true": "MuiGrid-grid-md-true",
                                              "grid-sm-1": "MuiGrid-grid-sm-1",
                                              "grid-sm-10": "MuiGrid-grid-sm-10",
                                              "grid-sm-11": "MuiGrid-grid-sm-11",
                                              "grid-sm-12": "MuiGrid-grid-sm-12",
                                              "grid-sm-2": "MuiGrid-grid-sm-2",
                                              "grid-sm-3": "MuiGrid-grid-sm-3",
                                              "grid-sm-4": "MuiGrid-grid-sm-4",
                                              "grid-sm-5": "MuiGrid-grid-sm-5",
                                              "grid-sm-6": "MuiGrid-grid-sm-6",
                                              "grid-sm-7": "MuiGrid-grid-sm-7",
                                              "grid-sm-8": "MuiGrid-grid-sm-8",
                                              "grid-sm-9": "MuiGrid-grid-sm-9",
                                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                              "grid-sm-true": "MuiGrid-grid-sm-true",
                                              "grid-xl-1": "MuiGrid-grid-xl-1",
                                              "grid-xl-10": "MuiGrid-grid-xl-10",
                                              "grid-xl-11": "MuiGrid-grid-xl-11",
                                              "grid-xl-12": "MuiGrid-grid-xl-12",
                                              "grid-xl-2": "MuiGrid-grid-xl-2",
                                              "grid-xl-3": "MuiGrid-grid-xl-3",
                                              "grid-xl-4": "MuiGrid-grid-xl-4",
                                              "grid-xl-5": "MuiGrid-grid-xl-5",
                                              "grid-xl-6": "MuiGrid-grid-xl-6",
                                              "grid-xl-7": "MuiGrid-grid-xl-7",
                                              "grid-xl-8": "MuiGrid-grid-xl-8",
                                              "grid-xl-9": "MuiGrid-grid-xl-9",
                                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                              "grid-xl-true": "MuiGrid-grid-xl-true",
                                              "grid-xs-1": "MuiGrid-grid-xs-1",
                                              "grid-xs-10": "MuiGrid-grid-xs-10",
                                              "grid-xs-11": "MuiGrid-grid-xs-11",
                                              "grid-xs-12": "MuiGrid-grid-xs-12",
                                              "grid-xs-2": "MuiGrid-grid-xs-2",
                                              "grid-xs-3": "MuiGrid-grid-xs-3",
                                              "grid-xs-4": "MuiGrid-grid-xs-4",
                                              "grid-xs-5": "MuiGrid-grid-xs-5",
                                              "grid-xs-6": "MuiGrid-grid-xs-6",
                                              "grid-xs-7": "MuiGrid-grid-xs-7",
                                              "grid-xs-8": "MuiGrid-grid-xs-8",
                                              "grid-xs-9": "MuiGrid-grid-xs-9",
                                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                              "grid-xs-true": "MuiGrid-grid-xs-true",
                                              "item": "MuiGrid-item",
                                              "justify-xs-center": "MuiGrid-justify-xs-center",
                                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                              "root": "MuiGrid-root",
                                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                            }
                                          }
                                          item={true}
                                          xs={12}
                                        >
                                          <div
                                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                                          >
                                            <TextWrapper
                                              label="Description"
                                              name="desc"
                                            >
                                              <WithStyles(ForwardRef(TextField))
                                                fullWidth={true}
                                                label="Description"
                                                name="desc"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                value=""
                                                variant="outlined"
                                              >
                                                <ForwardRef(TextField)
                                                  classes={
                                                    Object {
                                                      "root": "MuiTextField-root",
                                                    }
                                                  }
                                                  fullWidth={true}
                                                  label="Description"
                                                  name="desc"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  value=""
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ForwardRef(FormControl))
                                                    className="MuiTextField-root"
                                                    color="primary"
                                                    disabled={false}
                                                    error={false}
                                                    fullWidth={true}
                                                    required={false}
                                                    variant="outlined"
                                                  >
                                                    <ForwardRef(FormControl)
                                                      className="MuiTextField-root"
                                                      classes={
                                                        Object {
                                                          "fullWidth": "MuiFormControl-fullWidth",
                                                          "marginDense": "MuiFormControl-marginDense",
                                                          "marginNormal": "MuiFormControl-marginNormal",
                                                          "root": "MuiFormControl-root",
                                                        }
                                                      }
                                                      color="primary"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      required={false}
                                                      variant="outlined"
                                                    >
                                                      <div
                                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                      >
                                                        <WithStyles(ForwardRef(InputLabel))>
                                                          <ForwardRef(InputLabel)
                                                            classes={
                                                              Object {
                                                                "animated": "MuiInputLabel-animated",
                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "filled": "MuiInputLabel-filled",
                                                                "focused": "Mui-focused",
                                                                "formControl": "MuiInputLabel-formControl",
                                                                "marginDense": "MuiInputLabel-marginDense",
                                                                "outlined": "MuiInputLabel-outlined",
                                                                "required": "Mui-required",
                                                                "root": "MuiInputLabel-root",
                                                                "shrink": "MuiInputLabel-shrink",
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(FormLabel))
                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                              classes={
                                                                Object {
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "required": "Mui-required",
                                                                }
                                                              }
                                                              data-shrink={false}
                                                            >
                                                              <ForwardRef(FormLabel)
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "filled": "MuiFormLabel-filled",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "required": "Mui-required Mui-required",
                                                                    "root": "MuiFormLabel-root",
                                                                  }
                                                                }
                                                                data-shrink={false}
                                                              >
                                                                <label
                                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                  data-shrink={false}
                                                                >
                                                                  Description
                                                                </label>
                                                              </ForwardRef(FormLabel)>
                                                            </WithStyles(ForwardRef(FormLabel))>
                                                          </ForwardRef(InputLabel)>
                                                        </WithStyles(ForwardRef(InputLabel))>
                                                        <WithStyles(ForwardRef(OutlinedInput))
                                                          autoFocus={false}
                                                          fullWidth={true}
                                                          label={
                                                            <React.Fragment>
                                                              Description
                                                            </React.Fragment>
                                                          }
                                                          multiline={false}
                                                          name="desc"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          value=""
                                                        >
                                                          <ForwardRef(OutlinedInput)
                                                            autoFocus={false}
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "input": "MuiOutlinedInput-input",
                                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                                "multiline": "MuiOutlinedInput-multiline",
                                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                "root": "MuiOutlinedInput-root",
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            label={
                                                              <React.Fragment>
                                                                Description
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="desc"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <WithStyles(ForwardRef(InputBase))
                                                              autoFocus={false}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": null,
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              inputComponent="input"
                                                              multiline={false}
                                                              name="desc"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              renderSuffix={[Function]}
                                                              type="text"
                                                              value=""
                                                            >
                                                              <ForwardRef(InputBase)
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "formControl": "MuiInputBase-formControl",
                                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="desc"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                  onClick={[Function]}
                                                                >
                                                                  <input
                                                                    aria-invalid={false}
                                                                    autoFocus={false}
                                                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                                                    disabled={false}
                                                                    name="desc"
                                                                    onAnimationStart={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    type="text"
                                                                    value=""
                                                                  />
                                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                                    className="MuiOutlinedInput-notchedOutline"
                                                                    label={
                                                                      <React.Fragment>
                                                                        Description
                                                                      </React.Fragment>
                                                                    }
                                                                    labelWidth={0}
                                                                    notched={false}
                                                                  >
                                                                    <ForwardRef(NotchedOutline)
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      classes={
                                                                        Object {
                                                                          "legend": "PrivateNotchedOutline-legend-6",
                                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-7",
                                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-8",
                                                                          "root": "PrivateNotchedOutline-root-5",
                                                                        }
                                                                      }
                                                                      label={
                                                                        <React.Fragment>
                                                                          Description
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={false}
                                                                    >
                                                                      <fieldset
                                                                        aria-hidden={true}
                                                                        className="PrivateNotchedOutline-root-5 MuiOutlinedInput-notchedOutline"
                                                                      >
                                                                        <legend
                                                                          className="PrivateNotchedOutline-legendLabelled-7"
                                                                        >
                                                                          <span>
                                                                            Description
                                                                          </span>
                                                                        </legend>
                                                                      </fieldset>
                                                                    </ForwardRef(NotchedOutline)>
                                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                                </div>
                                                              </ForwardRef(InputBase)>
                                                            </WithStyles(ForwardRef(InputBase))>
                                                          </ForwardRef(OutlinedInput)>
                                                        </WithStyles(ForwardRef(OutlinedInput))>
                                                      </div>
                                                    </ForwardRef(FormControl)>
                                                  </WithStyles(ForwardRef(FormControl))>
                                                </ForwardRef(TextField)>
                                              </WithStyles(ForwardRef(TextField))>
                                            </TextWrapper>
                                          </div>
                                        </ForwardRef(Grid)>
                                      </WithStyles(ForwardRef(Grid))>
                                      <WithStyles(ForwardRef(Grid))
                                        item={true}
                                        xs={12}
                                      >
                                        <ForwardRef(Grid)
                                          classes={
                                            Object {
                                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                              "container": "MuiGrid-container",
                                              "direction-xs-column": "MuiGrid-direction-xs-column",
                                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                              "grid-lg-1": "MuiGrid-grid-lg-1",
                                              "grid-lg-10": "MuiGrid-grid-lg-10",
                                              "grid-lg-11": "MuiGrid-grid-lg-11",
                                              "grid-lg-12": "MuiGrid-grid-lg-12",
                                              "grid-lg-2": "MuiGrid-grid-lg-2",
                                              "grid-lg-3": "MuiGrid-grid-lg-3",
                                              "grid-lg-4": "MuiGrid-grid-lg-4",
                                              "grid-lg-5": "MuiGrid-grid-lg-5",
                                              "grid-lg-6": "MuiGrid-grid-lg-6",
                                              "grid-lg-7": "MuiGrid-grid-lg-7",
                                              "grid-lg-8": "MuiGrid-grid-lg-8",
                                              "grid-lg-9": "MuiGrid-grid-lg-9",
                                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                              "grid-lg-true": "MuiGrid-grid-lg-true",
                                              "grid-md-1": "MuiGrid-grid-md-1",
                                              "grid-md-10": "MuiGrid-grid-md-10",
                                              "grid-md-11": "MuiGrid-grid-md-11",
                                              "grid-md-12": "MuiGrid-grid-md-12",
                                              "grid-md-2": "MuiGrid-grid-md-2",
                                              "grid-md-3": "MuiGrid-grid-md-3",
                                              "grid-md-4": "MuiGrid-grid-md-4",
                                              "grid-md-5": "MuiGrid-grid-md-5",
                                              "grid-md-6": "MuiGrid-grid-md-6",
                                              "grid-md-7": "MuiGrid-grid-md-7",
                                              "grid-md-8": "MuiGrid-grid-md-8",
                                              "grid-md-9": "MuiGrid-grid-md-9",
                                              "grid-md-auto": "MuiGrid-grid-md-auto",
                                              "grid-md-true": "MuiGrid-grid-md-true",
                                              "grid-sm-1": "MuiGrid-grid-sm-1",
                                              "grid-sm-10": "MuiGrid-grid-sm-10",
                                              "grid-sm-11": "MuiGrid-grid-sm-11",
                                              "grid-sm-12": "MuiGrid-grid-sm-12",
                                              "grid-sm-2": "MuiGrid-grid-sm-2",
                                              "grid-sm-3": "MuiGrid-grid-sm-3",
                                              "grid-sm-4": "MuiGrid-grid-sm-4",
                                              "grid-sm-5": "MuiGrid-grid-sm-5",
                                              "grid-sm-6": "MuiGrid-grid-sm-6",
                                              "grid-sm-7": "MuiGrid-grid-sm-7",
                                              "grid-sm-8": "MuiGrid-grid-sm-8",
                                              "grid-sm-9": "MuiGrid-grid-sm-9",
                                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                              "grid-sm-true": "MuiGrid-grid-sm-true",
                                              "grid-xl-1": "MuiGrid-grid-xl-1",
                                              "grid-xl-10": "MuiGrid-grid-xl-10",
                                              "grid-xl-11": "MuiGrid-grid-xl-11",
                                              "grid-xl-12": "MuiGrid-grid-xl-12",
                                              "grid-xl-2": "MuiGrid-grid-xl-2",
                                              "grid-xl-3": "MuiGrid-grid-xl-3",
                                              "grid-xl-4": "MuiGrid-grid-xl-4",
                                              "grid-xl-5": "MuiGrid-grid-xl-5",
                                              "grid-xl-6": "MuiGrid-grid-xl-6",
                                              "grid-xl-7": "MuiGrid-grid-xl-7",
                                              "grid-xl-8": "MuiGrid-grid-xl-8",
                                              "grid-xl-9": "MuiGrid-grid-xl-9",
                                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                              "grid-xl-true": "MuiGrid-grid-xl-true",
                                              "grid-xs-1": "MuiGrid-grid-xs-1",
                                              "grid-xs-10": "MuiGrid-grid-xs-10",
                                              "grid-xs-11": "MuiGrid-grid-xs-11",
                                              "grid-xs-12": "MuiGrid-grid-xs-12",
                                              "grid-xs-2": "MuiGrid-grid-xs-2",
                                              "grid-xs-3": "MuiGrid-grid-xs-3",
                                              "grid-xs-4": "MuiGrid-grid-xs-4",
                                              "grid-xs-5": "MuiGrid-grid-xs-5",
                                              "grid-xs-6": "MuiGrid-grid-xs-6",
                                              "grid-xs-7": "MuiGrid-grid-xs-7",
                                              "grid-xs-8": "MuiGrid-grid-xs-8",
                                              "grid-xs-9": "MuiGrid-grid-xs-9",
                                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                              "grid-xs-true": "MuiGrid-grid-xs-true",
                                              "item": "MuiGrid-item",
                                              "justify-xs-center": "MuiGrid-justify-xs-center",
                                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                              "root": "MuiGrid-root",
                                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                            }
                                          }
                                          item={true}
                                          xs={12}
                                        >
                                          <div
                                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                                          >
                                            <SelectWrapper
                                              label="Select Severity"
                                              name="severity"
                                              options={
                                                Array [
                                                  "Minor",
                                                  "Major",
                                                  "Critical",
                                                ]
                                              }
                                            >
                                              <WithStyles(ForwardRef(TextField))
                                                fullWidth={true}
                                                label="Select Severity"
                                                name="severity"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                select={true}
                                                style={
                                                  Object {
                                                    "textAlign": "left",
                                                  }
                                                }
                                                value=""
                                                variant="outlined"
                                              >
                                                <ForwardRef(TextField)
                                                  classes={
                                                    Object {
                                                      "root": "MuiTextField-root",
                                                    }
                                                  }
                                                  fullWidth={true}
                                                  label="Select Severity"
                                                  name="severity"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  select={true}
                                                  style={
                                                    Object {
                                                      "textAlign": "left",
                                                    }
                                                  }
                                                  value=""
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ForwardRef(FormControl))
                                                    className="MuiTextField-root"
                                                    color="primary"
                                                    disabled={false}
                                                    error={false}
                                                    fullWidth={true}
                                                    required={false}
                                                    style={
                                                      Object {
                                                        "textAlign": "left",
                                                      }
                                                    }
                                                    variant="outlined"
                                                  >
                                                    <ForwardRef(FormControl)
                                                      className="MuiTextField-root"
                                                      classes={
                                                        Object {
                                                          "fullWidth": "MuiFormControl-fullWidth",
                                                          "marginDense": "MuiFormControl-marginDense",
                                                          "marginNormal": "MuiFormControl-marginNormal",
                                                          "root": "MuiFormControl-root",
                                                        }
                                                      }
                                                      color="primary"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      required={false}
                                                      style={
                                                        Object {
                                                          "textAlign": "left",
                                                        }
                                                      }
                                                      variant="outlined"
                                                    >
                                                      <div
                                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                        style={
                                                          Object {
                                                            "textAlign": "left",
                                                          }
                                                        }
                                                      >
                                                        <WithStyles(ForwardRef(InputLabel))>
                                                          <ForwardRef(InputLabel)
                                                            classes={
                                                              Object {
                                                                "animated": "MuiInputLabel-animated",
                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "filled": "MuiInputLabel-filled",
                                                                "focused": "Mui-focused",
                                                                "formControl": "MuiInputLabel-formControl",
                                                                "marginDense": "MuiInputLabel-marginDense",
                                                                "outlined": "MuiInputLabel-outlined",
                                                                "required": "Mui-required",
                                                                "root": "MuiInputLabel-root",
                                                                "shrink": "MuiInputLabel-shrink",
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(FormLabel))
                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                              classes={
                                                                Object {
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "required": "Mui-required",
                                                                }
                                                              }
                                                              data-shrink={false}
                                                            >
                                                              <ForwardRef(FormLabel)
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "filled": "MuiFormLabel-filled",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "required": "Mui-required Mui-required",
                                                                    "root": "MuiFormLabel-root",
                                                                  }
                                                                }
                                                                data-shrink={false}
                                                              >
                                                                <label
                                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                  data-shrink={false}
                                                                >
                                                                  Select Severity
                                                                </label>
                                                              </ForwardRef(FormLabel)>
                                                            </WithStyles(ForwardRef(FormLabel))>
                                                          </ForwardRef(InputLabel)>
                                                        </WithStyles(ForwardRef(InputLabel))>
                                                        <WithStyles(ForwardRef(Select))
                                                          input={
                                                            <WithStyles(ForwardRef(OutlinedInput))
                                                              autoFocus={false}
                                                              fullWidth={true}
                                                              label={
                                                                <React.Fragment>
                                                                  Select Severity
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="severity"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value=""
                                                            />
                                                          }
                                                          value=""
                                                        >
                                                          <ForwardRef(Select)
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              }
                                                            }
                                                            input={
                                                              <WithStyles(ForwardRef(OutlinedInput))
                                                                autoFocus={false}
                                                                fullWidth={true}
                                                                label={
                                                                  <React.Fragment>
                                                                    Select Severity
                                                                  </React.Fragment>
                                                                }
                                                                multiline={false}
                                                                name="severity"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                value=""
                                                              />
                                                            }
                                                            value=""
                                                          >
                                                            <WithStyles(ForwardRef(OutlinedInput))
                                                              autoFocus={false}
                                                              fullWidth={true}
                                                              inputComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "aria-label": [Function],
                                                                    "autoFocus": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "className": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "disabled": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "inputRef": [Function],
                                                                    "labelId": [Function],
                                                                    "multiple": [Function],
                                                                    "name": [Function],
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onFocus": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "readOnly": [Function],
                                                                    "renderValue": [Function],
                                                                    "tabIndex": [Function],
                                                                    "type": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": Object {
                                                                    "$$typeof": Symbol(react.memo),
                                                                    "compare": null,
                                                                    "type": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "render": [Function],
                                                                    },
                                                                  },
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": undefined,
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value="Minor"
                                                                    >
                                                                      Minor
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value="Major"
                                                                    >
                                                                      Major
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value="Critical"
                                                                    >
                                                                      Critical
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "filled": "MuiSelect-filled",
                                                                    "icon": "MuiSelect-icon",
                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                    "outlined": "MuiSelect-outlined",
                                                                    "root": "MuiSelect-root",
                                                                    "select": "MuiSelect-select",
                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                  },
                                                                  "displayEmpty": false,
                                                                  "labelId": undefined,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "outlined",
                                                                }
                                                              }
                                                              label={
                                                                <React.Fragment>
                                                                  Select Severity
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="severity"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value=""
                                                            >
                                                              <ForwardRef(OutlinedInput)
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                inputComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "propTypes": Object {
                                                                      "IconComponent": [Function],
                                                                      "MenuProps": [Function],
                                                                      "SelectDisplayProps": [Function],
                                                                      "aria-label": [Function],
                                                                      "autoFocus": [Function],
                                                                      "autoWidth": [Function],
                                                                      "children": [Function],
                                                                      "className": [Function],
                                                                      "classes": [Function],
                                                                      "defaultValue": [Function],
                                                                      "disabled": [Function],
                                                                      "displayEmpty": [Function],
                                                                      "inputRef": [Function],
                                                                      "labelId": [Function],
                                                                      "multiple": [Function],
                                                                      "name": [Function],
                                                                      "onBlur": [Function],
                                                                      "onChange": [Function],
                                                                      "onClose": [Function],
                                                                      "onFocus": [Function],
                                                                      "onOpen": [Function],
                                                                      "open": [Function],
                                                                      "readOnly": [Function],
                                                                      "renderValue": [Function],
                                                                      "tabIndex": [Function],
                                                                      "type": [Function],
                                                                      "value": [Function],
                                                                      "variant": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                inputProps={
                                                                  Object {
                                                                    "IconComponent": Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    },
                                                                    "MenuProps": undefined,
                                                                    "SelectDisplayProps": Object {
                                                                      "id": undefined,
                                                                    },
                                                                    "autoWidth": false,
                                                                    "children": Array [
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value="Minor"
                                                                      >
                                                                        Minor
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value="Major"
                                                                      >
                                                                        Major
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value="Critical"
                                                                      >
                                                                        Critical
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                    ],
                                                                    "classes": Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    },
                                                                    "displayEmpty": false,
                                                                    "labelId": undefined,
                                                                    "multiple": false,
                                                                    "onClose": undefined,
                                                                    "onOpen": undefined,
                                                                    "open": undefined,
                                                                    "renderValue": undefined,
                                                                    "type": undefined,
                                                                    "variant": "outlined",
                                                                  }
                                                                }
                                                                label={
                                                                  <React.Fragment>
                                                                    Select Severity
                                                                  </React.Fragment>
                                                                }
                                                                multiline={false}
                                                                name="severity"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                value=""
                                                              >
                                                                <WithStyles(ForwardRef(InputBase))
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "input": "MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                      "marginDense": "MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiOutlinedInput-multiline",
                                                                      "notchedOutline": null,
                                                                      "root": "MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  inputComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "propTypes": Object {
                                                                        "IconComponent": [Function],
                                                                        "MenuProps": [Function],
                                                                        "SelectDisplayProps": [Function],
                                                                        "aria-label": [Function],
                                                                        "autoFocus": [Function],
                                                                        "autoWidth": [Function],
                                                                        "children": [Function],
                                                                        "className": [Function],
                                                                        "classes": [Function],
                                                                        "defaultValue": [Function],
                                                                        "disabled": [Function],
                                                                        "displayEmpty": [Function],
                                                                        "inputRef": [Function],
                                                                        "labelId": [Function],
                                                                        "multiple": [Function],
                                                                        "name": [Function],
                                                                        "onBlur": [Function],
                                                                        "onChange": [Function],
                                                                        "onClose": [Function],
                                                                        "onFocus": [Function],
                                                                        "onOpen": [Function],
                                                                        "open": [Function],
                                                                        "readOnly": [Function],
                                                                        "renderValue": [Function],
                                                                        "tabIndex": [Function],
                                                                        "type": [Function],
                                                                        "value": [Function],
                                                                        "variant": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  inputProps={
                                                                    Object {
                                                                      "IconComponent": Object {
                                                                        "$$typeof": Symbol(react.memo),
                                                                        "compare": null,
                                                                        "type": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "render": [Function],
                                                                        },
                                                                      },
                                                                      "MenuProps": undefined,
                                                                      "SelectDisplayProps": Object {
                                                                        "id": undefined,
                                                                      },
                                                                      "autoWidth": false,
                                                                      "children": Array [
                                                                        <WithStyles(ForwardRef(MenuItem))
                                                                          value="Minor"
                                                                        >
                                                                          Minor
                                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                                        <WithStyles(ForwardRef(MenuItem))
                                                                          value="Major"
                                                                        >
                                                                          Major
                                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                                        <WithStyles(ForwardRef(MenuItem))
                                                                          value="Critical"
                                                                        >
                                                                          Critical
                                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                                      ],
                                                                      "classes": Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "filled": "MuiSelect-filled",
                                                                        "icon": "MuiSelect-icon",
                                                                        "iconFilled": "MuiSelect-iconFilled",
                                                                        "iconOpen": "MuiSelect-iconOpen",
                                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                                        "nativeInput": "MuiSelect-nativeInput",
                                                                        "outlined": "MuiSelect-outlined",
                                                                        "root": "MuiSelect-root",
                                                                        "select": "MuiSelect-select",
                                                                        "selectMenu": "MuiSelect-selectMenu",
                                                                      },
                                                                      "displayEmpty": false,
                                                                      "labelId": undefined,
                                                                      "multiple": false,
                                                                      "onClose": undefined,
                                                                      "onOpen": undefined,
                                                                      "open": undefined,
                                                                      "renderValue": undefined,
                                                                      "type": undefined,
                                                                      "variant": "outlined",
                                                                    }
                                                                  }
                                                                  multiline={false}
                                                                  name="severity"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderSuffix={[Function]}
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <ForwardRef(InputBase)
                                                                    autoFocus={false}
                                                                    classes={
                                                                      Object {
                                                                        "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                        "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                        "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                        "disabled": "Mui-disabled Mui-disabled",
                                                                        "error": "Mui-error Mui-error",
                                                                        "focused": "Mui-focused Mui-focused",
                                                                        "formControl": "MuiInputBase-formControl",
                                                                        "fullWidth": "MuiInputBase-fullWidth",
                                                                        "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                        "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                        "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                        "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                        "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                      }
                                                                    }
                                                                    fullWidth={true}
                                                                    inputComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "propTypes": Object {
                                                                          "IconComponent": [Function],
                                                                          "MenuProps": [Function],
                                                                          "SelectDisplayProps": [Function],
                                                                          "aria-label": [Function],
                                                                          "autoFocus": [Function],
                                                                          "autoWidth": [Function],
                                                                          "children": [Function],
                                                                          "className": [Function],
                                                                          "classes": [Function],
                                                                          "defaultValue": [Function],
                                                                          "disabled": [Function],
                                                                          "displayEmpty": [Function],
                                                                          "inputRef": [Function],
                                                                          "labelId": [Function],
                                                                          "multiple": [Function],
                                                                          "name": [Function],
                                                                          "onBlur": [Function],
                                                                          "onChange": [Function],
                                                                          "onClose": [Function],
                                                                          "onFocus": [Function],
                                                                          "onOpen": [Function],
                                                                          "open": [Function],
                                                                          "readOnly": [Function],
                                                                          "renderValue": [Function],
                                                                          "tabIndex": [Function],
                                                                          "type": [Function],
                                                                          "value": [Function],
                                                                          "variant": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    inputProps={
                                                                      Object {
                                                                        "IconComponent": Object {
                                                                          "$$typeof": Symbol(react.memo),
                                                                          "compare": null,
                                                                          "type": Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "render": [Function],
                                                                          },
                                                                        },
                                                                        "MenuProps": undefined,
                                                                        "SelectDisplayProps": Object {
                                                                          "id": undefined,
                                                                        },
                                                                        "autoWidth": false,
                                                                        "children": Array [
                                                                          <WithStyles(ForwardRef(MenuItem))
                                                                            value="Minor"
                                                                          >
                                                                            Minor
                                                                          </WithStyles(ForwardRef(MenuItem))>,
                                                                          <WithStyles(ForwardRef(MenuItem))
                                                                            value="Major"
                                                                          >
                                                                            Major
                                                                          </WithStyles(ForwardRef(MenuItem))>,
                                                                          <WithStyles(ForwardRef(MenuItem))
                                                                            value="Critical"
                                                                          >
                                                                            Critical
                                                                          </WithStyles(ForwardRef(MenuItem))>,
                                                                        ],
                                                                        "classes": Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "filled": "MuiSelect-filled",
                                                                          "icon": "MuiSelect-icon",
                                                                          "iconFilled": "MuiSelect-iconFilled",
                                                                          "iconOpen": "MuiSelect-iconOpen",
                                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                                          "nativeInput": "MuiSelect-nativeInput",
                                                                          "outlined": "MuiSelect-outlined",
                                                                          "root": "MuiSelect-root",
                                                                          "select": "MuiSelect-select",
                                                                          "selectMenu": "MuiSelect-selectMenu",
                                                                        },
                                                                        "displayEmpty": false,
                                                                        "labelId": undefined,
                                                                        "multiple": false,
                                                                        "onClose": undefined,
                                                                        "onOpen": undefined,
                                                                        "open": undefined,
                                                                        "renderValue": undefined,
                                                                        "type": undefined,
                                                                        "variant": "outlined",
                                                                      }
                                                                    }
                                                                    multiline={false}
                                                                    name="severity"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    renderSuffix={[Function]}
                                                                    type="text"
                                                                    value=""
                                                                  >
                                                                    <div
                                                                      className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(SelectInput)
                                                                        IconComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.memo),
                                                                            "compare": null,
                                                                            "type": Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "render": [Function],
                                                                            },
                                                                          }
                                                                        }
                                                                        SelectDisplayProps={
                                                                          Object {
                                                                            "id": undefined,
                                                                          }
                                                                        }
                                                                        aria-invalid={false}
                                                                        autoFocus={false}
                                                                        autoWidth={false}
                                                                        className="MuiInputBase-input MuiOutlinedInput-input"
                                                                        classes={
                                                                          Object {
                                                                            "disabled": "Mui-disabled",
                                                                            "filled": "MuiSelect-filled",
                                                                            "icon": "MuiSelect-icon",
                                                                            "iconFilled": "MuiSelect-iconFilled",
                                                                            "iconOpen": "MuiSelect-iconOpen",
                                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                                            "nativeInput": "MuiSelect-nativeInput",
                                                                            "outlined": "MuiSelect-outlined",
                                                                            "root": "MuiSelect-root",
                                                                            "select": "MuiSelect-select",
                                                                            "selectMenu": "MuiSelect-selectMenu",
                                                                          }
                                                                        }
                                                                        disabled={false}
                                                                        displayEmpty={false}
                                                                        inputRef={[Function]}
                                                                        multiple={false}
                                                                        name="severity"
                                                                        onAnimationStart={[Function]}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        required={false}
                                                                        value=""
                                                                        variant="outlined"
                                                                      >
                                                                        <div
                                                                          aria-haspopup="listbox"
                                                                          aria-labelledby="mui-component-select-severity"
                                                                          className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                          id="mui-component-select-severity"
                                                                          onBlur={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          <span
                                                                            dangerouslySetInnerHTML={
                                                                              Object {
                                                                                "__html": "&#8203;",
                                                                              }
                                                                            }
                                                                          />
                                                                        </div>
                                                                        <input
                                                                          aria-hidden={true}
                                                                          autoFocus={false}
                                                                          className="MuiSelect-nativeInput"
                                                                          name="severity"
                                                                          onAnimationStart={[Function]}
                                                                          onChange={[Function]}
                                                                          required={false}
                                                                          tabIndex={-1}
                                                                          value=""
                                                                        />
                                                                        <ForwardRef(ArrowDropDownIcon)
                                                                          className="MuiSelect-icon MuiSelect-iconOutlined"
                                                                        >
                                                                          <WithStyles(ForwardRef(SvgIcon))
                                                                            className="MuiSelect-icon MuiSelect-iconOutlined"
                                                                          >
                                                                            <ForwardRef(SvgIcon)
                                                                              className="MuiSelect-icon MuiSelect-iconOutlined"
                                                                              classes={
                                                                                Object {
                                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                  "root": "MuiSvgIcon-root",
                                                                                }
                                                                              }
                                                                            >
                                                                              <svg
                                                                                aria-hidden={true}
                                                                                className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconOutlined"
                                                                                focusable="false"
                                                                                viewBox="0 0 24 24"
                                                                              >
                                                                                <path
                                                                                  d="M7 10l5 5 5-5z"
                                                                                />
                                                                              </svg>
                                                                            </ForwardRef(SvgIcon)>
                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                        </ForwardRef(ArrowDropDownIcon)>
                                                                        <WithStyles(ForwardRef(Menu))
                                                                          MenuListProps={
                                                                            Object {
                                                                              "aria-labelledby": undefined,
                                                                              "disableListWrap": true,
                                                                              "role": "listbox",
                                                                            }
                                                                          }
                                                                          PaperProps={
                                                                            Object {
                                                                              "style": Object {
                                                                                "minWidth": undefined,
                                                                              },
                                                                            }
                                                                          }
                                                                          anchorEl={
                                                                            <div
                                                                              aria-haspopup="listbox"
                                                                              aria-labelledby="mui-component-select-severity"
                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                              id="mui-component-select-severity"
                                                                              role="button"
                                                                              tabindex="0"
                                                                            >
                                                                              <span>
                                                                                ​
                                                                              </span>
                                                                            </div>
                                                                          }
                                                                          id="menu-severity"
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                        >
                                                                          <ForwardRef(Menu)
                                                                            MenuListProps={
                                                                              Object {
                                                                                "aria-labelledby": undefined,
                                                                                "disableListWrap": true,
                                                                                "role": "listbox",
                                                                              }
                                                                            }
                                                                            PaperProps={
                                                                              Object {
                                                                                "style": Object {
                                                                                  "minWidth": undefined,
                                                                                },
                                                                              }
                                                                            }
                                                                            anchorEl={
                                                                              <div
                                                                                aria-haspopup="listbox"
                                                                                aria-labelledby="mui-component-select-severity"
                                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                                id="mui-component-select-severity"
                                                                                role="button"
                                                                                tabindex="0"
                                                                              >
                                                                                <span>
                                                                                  ​
                                                                                </span>
                                                                              </div>
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "list": "MuiMenu-list",
                                                                                "paper": "MuiMenu-paper",
                                                                              }
                                                                            }
                                                                            id="menu-severity"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                          >
                                                                            <WithStyles(ForwardRef(Popover))
                                                                              PaperProps={
                                                                                Object {
                                                                                  "classes": Object {
                                                                                    "root": "MuiMenu-paper",
                                                                                  },
                                                                                  "style": Object {
                                                                                    "minWidth": undefined,
                                                                                  },
                                                                                }
                                                                              }
                                                                              anchorEl={
                                                                                <div
                                                                                  aria-haspopup="listbox"
                                                                                  aria-labelledby="mui-component-select-severity"
                                                                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                                  id="mui-component-select-severity"
                                                                                  role="button"
                                                                                  tabindex="0"
                                                                                >
                                                                                  <span>
                                                                                    ​
                                                                                  </span>
                                                                                </div>
                                                                              }
                                                                              anchorOrigin={
                                                                                Object {
                                                                                  "horizontal": "left",
                                                                                  "vertical": "top",
                                                                                }
                                                                              }
                                                                              getContentAnchorEl={[Function]}
                                                                              id="menu-severity"
                                                                              onClose={[Function]}
                                                                              onEntering={[Function]}
                                                                              open={false}
                                                                              transformOrigin={
                                                                                Object {
                                                                                  "horizontal": "left",
                                                                                  "vertical": "top",
                                                                                }
                                                                              }
                                                                              transitionDuration="auto"
                                                                            >
                                                                              <ForwardRef(Popover)
                                                                                PaperProps={
                                                                                  Object {
                                                                                    "classes": Object {
                                                                                      "root": "MuiMenu-paper",
                                                                                    },
                                                                                    "style": Object {
                                                                                      "minWidth": undefined,
                                                                                    },
                                                                                  }
                                                                                }
                                                                                anchorEl={
                                                                                  <div
                                                                                    aria-haspopup="listbox"
                                                                                    aria-labelledby="mui-component-select-severity"
                                                                                    class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                                    id="mui-component-select-severity"
                                                                                    role="button"
                                                                                    tabindex="0"
                                                                                  >
                                                                                    <span>
                                                                                      ​
                                                                                    </span>
                                                                                  </div>
                                                                                }
                                                                                anchorOrigin={
                                                                                  Object {
                                                                                    "horizontal": "left",
                                                                                    "vertical": "top",
                                                                                  }
                                                                                }
                                                                                classes={
                                                                                  Object {
                                                                                    "paper": "MuiPopover-paper",
                                                                                    "root": "MuiPopover-root",
                                                                                  }
                                                                                }
                                                                                getContentAnchorEl={[Function]}
                                                                                id="menu-severity"
                                                                                onClose={[Function]}
                                                                                onEntering={[Function]}
                                                                                open={false}
                                                                                transformOrigin={
                                                                                  Object {
                                                                                    "horizontal": "left",
                                                                                    "vertical": "top",
                                                                                  }
                                                                                }
                                                                                transitionDuration="auto"
                                                                              >
                                                                                <ForwardRef(Modal)
                                                                                  BackdropProps={
                                                                                    Object {
                                                                                      "invisible": true,
                                                                                    }
                                                                                  }
                                                                                  className="MuiPopover-root"
                                                                                  container={<body />}
                                                                                  id="menu-severity"
                                                                                  onClose={[Function]}
                                                                                  open={false}
                                                                                />
                                                                              </ForwardRef(Popover)>
                                                                            </WithStyles(ForwardRef(Popover))>
                                                                          </ForwardRef(Menu)>
                                                                        </WithStyles(ForwardRef(Menu))>
                                                                      </ForwardRef(SelectInput)>
                                                                      <WithStyles(ForwardRef(NotchedOutline))
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        label={
                                                                          <React.Fragment>
                                                                            Select Severity
                                                                          </React.Fragment>
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={false}
                                                                      >
                                                                        <ForwardRef(NotchedOutline)
                                                                          className="MuiOutlinedInput-notchedOutline"
                                                                          classes={
                                                                            Object {
                                                                              "legend": "PrivateNotchedOutline-legend-6",
                                                                              "legendLabelled": "PrivateNotchedOutline-legendLabelled-7",
                                                                              "legendNotched": "PrivateNotchedOutline-legendNotched-8",
                                                                              "root": "PrivateNotchedOutline-root-5",
                                                                            }
                                                                          }
                                                                          label={
                                                                            <React.Fragment>
                                                                              Select Severity
                                                                            </React.Fragment>
                                                                          }
                                                                          labelWidth={0}
                                                                          notched={false}
                                                                        >
                                                                          <fieldset
                                                                            aria-hidden={true}
                                                                            className="PrivateNotchedOutline-root-5 MuiOutlinedInput-notchedOutline"
                                                                          >
                                                                            <legend
                                                                              className="PrivateNotchedOutline-legendLabelled-7"
                                                                            >
                                                                              <span>
                                                                                Select Severity
                                                                              </span>
                                                                            </legend>
                                                                          </fieldset>
                                                                        </ForwardRef(NotchedOutline)>
                                                                      </WithStyles(ForwardRef(NotchedOutline))>
                                                                    </div>
                                                                  </ForwardRef(InputBase)>
                                                                </WithStyles(ForwardRef(InputBase))>
                                                              </ForwardRef(OutlinedInput)>
                                                            </WithStyles(ForwardRef(OutlinedInput))>
                                                          </ForwardRef(Select)>
                                                        </WithStyles(ForwardRef(Select))>
                                                      </div>
                                                    </ForwardRef(FormControl)>
                                                  </WithStyles(ForwardRef(FormControl))>
                                                </ForwardRef(TextField)>
                                              </WithStyles(ForwardRef(TextField))>
                                            </SelectWrapper>
                                          </div>
                                        </ForwardRef(Grid)>
                                      </WithStyles(ForwardRef(Grid))>
                                      <WithStyles(ForwardRef(Grid))
                                        item={true}
                                        xs={12}
                                      >
                                        <ForwardRef(Grid)
                                          classes={
                                            Object {
                                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                              "container": "MuiGrid-container",
                                              "direction-xs-column": "MuiGrid-direction-xs-column",
                                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                              "grid-lg-1": "MuiGrid-grid-lg-1",
                                              "grid-lg-10": "MuiGrid-grid-lg-10",
                                              "grid-lg-11": "MuiGrid-grid-lg-11",
                                              "grid-lg-12": "MuiGrid-grid-lg-12",
                                              "grid-lg-2": "MuiGrid-grid-lg-2",
                                              "grid-lg-3": "MuiGrid-grid-lg-3",
                                              "grid-lg-4": "MuiGrid-grid-lg-4",
                                              "grid-lg-5": "MuiGrid-grid-lg-5",
                                              "grid-lg-6": "MuiGrid-grid-lg-6",
                                              "grid-lg-7": "MuiGrid-grid-lg-7",
                                              "grid-lg-8": "MuiGrid-grid-lg-8",
                                              "grid-lg-9": "MuiGrid-grid-lg-9",
                                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                              "grid-lg-true": "MuiGrid-grid-lg-true",
                                              "grid-md-1": "MuiGrid-grid-md-1",
                                              "grid-md-10": "MuiGrid-grid-md-10",
                                              "grid-md-11": "MuiGrid-grid-md-11",
                                              "grid-md-12": "MuiGrid-grid-md-12",
                                              "grid-md-2": "MuiGrid-grid-md-2",
                                              "grid-md-3": "MuiGrid-grid-md-3",
                                              "grid-md-4": "MuiGrid-grid-md-4",
                                              "grid-md-5": "MuiGrid-grid-md-5",
                                              "grid-md-6": "MuiGrid-grid-md-6",
                                              "grid-md-7": "MuiGrid-grid-md-7",
                                              "grid-md-8": "MuiGrid-grid-md-8",
                                              "grid-md-9": "MuiGrid-grid-md-9",
                                              "grid-md-auto": "MuiGrid-grid-md-auto",
                                              "grid-md-true": "MuiGrid-grid-md-true",
                                              "grid-sm-1": "MuiGrid-grid-sm-1",
                                              "grid-sm-10": "MuiGrid-grid-sm-10",
                                              "grid-sm-11": "MuiGrid-grid-sm-11",
                                              "grid-sm-12": "MuiGrid-grid-sm-12",
                                              "grid-sm-2": "MuiGrid-grid-sm-2",
                                              "grid-sm-3": "MuiGrid-grid-sm-3",
                                              "grid-sm-4": "MuiGrid-grid-sm-4",
                                              "grid-sm-5": "MuiGrid-grid-sm-5",
                                              "grid-sm-6": "MuiGrid-grid-sm-6",
                                              "grid-sm-7": "MuiGrid-grid-sm-7",
                                              "grid-sm-8": "MuiGrid-grid-sm-8",
                                              "grid-sm-9": "MuiGrid-grid-sm-9",
                                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                              "grid-sm-true": "MuiGrid-grid-sm-true",
                                              "grid-xl-1": "MuiGrid-grid-xl-1",
                                              "grid-xl-10": "MuiGrid-grid-xl-10",
                                              "grid-xl-11": "MuiGrid-grid-xl-11",
                                              "grid-xl-12": "MuiGrid-grid-xl-12",
                                              "grid-xl-2": "MuiGrid-grid-xl-2",
                                              "grid-xl-3": "MuiGrid-grid-xl-3",
                                              "grid-xl-4": "MuiGrid-grid-xl-4",
                                              "grid-xl-5": "MuiGrid-grid-xl-5",
                                              "grid-xl-6": "MuiGrid-grid-xl-6",
                                              "grid-xl-7": "MuiGrid-grid-xl-7",
                                              "grid-xl-8": "MuiGrid-grid-xl-8",
                                              "grid-xl-9": "MuiGrid-grid-xl-9",
                                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                              "grid-xl-true": "MuiGrid-grid-xl-true",
                                              "grid-xs-1": "MuiGrid-grid-xs-1",
                                              "grid-xs-10": "MuiGrid-grid-xs-10",
                                              "grid-xs-11": "MuiGrid-grid-xs-11",
                                              "grid-xs-12": "MuiGrid-grid-xs-12",
                                              "grid-xs-2": "MuiGrid-grid-xs-2",
                                              "grid-xs-3": "MuiGrid-grid-xs-3",
                                              "grid-xs-4": "MuiGrid-grid-xs-4",
                                              "grid-xs-5": "MuiGrid-grid-xs-5",
                                              "grid-xs-6": "MuiGrid-grid-xs-6",
                                              "grid-xs-7": "MuiGrid-grid-xs-7",
                                              "grid-xs-8": "MuiGrid-grid-xs-8",
                                              "grid-xs-9": "MuiGrid-grid-xs-9",
                                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                              "grid-xs-true": "MuiGrid-grid-xs-true",
                                              "item": "MuiGrid-item",
                                              "justify-xs-center": "MuiGrid-justify-xs-center",
                                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                              "root": "MuiGrid-root",
                                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                            }
                                          }
                                          item={true}
                                          xs={12}
                                        >
                                          <div
                                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                                          >
                                            <SelectWrapper
                                              label="Select Status"
                                              name="status"
                                              options={
                                                Array [
                                                  "Open",
                                                  "In Progress",
                                                  "Closed",
                                                ]
                                              }
                                            >
                                              <WithStyles(ForwardRef(TextField))
                                                fullWidth={true}
                                                label="Select Status"
                                                name="status"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                select={true}
                                                style={
                                                  Object {
                                                    "textAlign": "left",
                                                  }
                                                }
                                                value=""
                                                variant="outlined"
                                              >
                                                <ForwardRef(TextField)
                                                  classes={
                                                    Object {
                                                      "root": "MuiTextField-root",
                                                    }
                                                  }
                                                  fullWidth={true}
                                                  label="Select Status"
                                                  name="status"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  select={true}
                                                  style={
                                                    Object {
                                                      "textAlign": "left",
                                                    }
                                                  }
                                                  value=""
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ForwardRef(FormControl))
                                                    className="MuiTextField-root"
                                                    color="primary"
                                                    disabled={false}
                                                    error={false}
                                                    fullWidth={true}
                                                    required={false}
                                                    style={
                                                      Object {
                                                        "textAlign": "left",
                                                      }
                                                    }
                                                    variant="outlined"
                                                  >
                                                    <ForwardRef(FormControl)
                                                      className="MuiTextField-root"
                                                      classes={
                                                        Object {
                                                          "fullWidth": "MuiFormControl-fullWidth",
                                                          "marginDense": "MuiFormControl-marginDense",
                                                          "marginNormal": "MuiFormControl-marginNormal",
                                                          "root": "MuiFormControl-root",
                                                        }
                                                      }
                                                      color="primary"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      required={false}
                                                      style={
                                                        Object {
                                                          "textAlign": "left",
                                                        }
                                                      }
                                                      variant="outlined"
                                                    >
                                                      <div
                                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                        style={
                                                          Object {
                                                            "textAlign": "left",
                                                          }
                                                        }
                                                      >
                                                        <WithStyles(ForwardRef(InputLabel))>
                                                          <ForwardRef(InputLabel)
                                                            classes={
                                                              Object {
                                                                "animated": "MuiInputLabel-animated",
                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "filled": "MuiInputLabel-filled",
                                                                "focused": "Mui-focused",
                                                                "formControl": "MuiInputLabel-formControl",
                                                                "marginDense": "MuiInputLabel-marginDense",
                                                                "outlined": "MuiInputLabel-outlined",
                                                                "required": "Mui-required",
                                                                "root": "MuiInputLabel-root",
                                                                "shrink": "MuiInputLabel-shrink",
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(FormLabel))
                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                              classes={
                                                                Object {
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "required": "Mui-required",
                                                                }
                                                              }
                                                              data-shrink={false}
                                                            >
                                                              <ForwardRef(FormLabel)
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "filled": "MuiFormLabel-filled",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "required": "Mui-required Mui-required",
                                                                    "root": "MuiFormLabel-root",
                                                                  }
                                                                }
                                                                data-shrink={false}
                                                              >
                                                                <label
                                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                  data-shrink={false}
                                                                >
                                                                  Select Status
                                                                </label>
                                                              </ForwardRef(FormLabel)>
                                                            </WithStyles(ForwardRef(FormLabel))>
                                                          </ForwardRef(InputLabel)>
                                                        </WithStyles(ForwardRef(InputLabel))>
                                                        <WithStyles(ForwardRef(Select))
                                                          input={
                                                            <WithStyles(ForwardRef(OutlinedInput))
                                                              autoFocus={false}
                                                              fullWidth={true}
                                                              label={
                                                                <React.Fragment>
                                                                  Select Status
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="status"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value=""
                                                            />
                                                          }
                                                          value=""
                                                        >
                                                          <ForwardRef(Select)
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              }
                                                            }
                                                            input={
                                                              <WithStyles(ForwardRef(OutlinedInput))
                                                                autoFocus={false}
                                                                fullWidth={true}
                                                                label={
                                                                  <React.Fragment>
                                                                    Select Status
                                                                  </React.Fragment>
                                                                }
                                                                multiline={false}
                                                                name="status"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                value=""
                                                              />
                                                            }
                                                            value=""
                                                          >
                                                            <WithStyles(ForwardRef(OutlinedInput))
                                                              autoFocus={false}
                                                              fullWidth={true}
                                                              inputComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "aria-label": [Function],
                                                                    "autoFocus": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "className": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "disabled": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "inputRef": [Function],
                                                                    "labelId": [Function],
                                                                    "multiple": [Function],
                                                                    "name": [Function],
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onFocus": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "readOnly": [Function],
                                                                    "renderValue": [Function],
                                                                    "tabIndex": [Function],
                                                                    "type": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": Object {
                                                                    "$$typeof": Symbol(react.memo),
                                                                    "compare": null,
                                                                    "type": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "render": [Function],
                                                                    },
                                                                  },
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": undefined,
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value="Open"
                                                                    >
                                                                      Open
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value="In Progress"
                                                                    >
                                                                      In Progress
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      value="Closed"
                                                                    >
                                                                      Closed
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "filled": "MuiSelect-filled",
                                                                    "icon": "MuiSelect-icon",
                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                    "outlined": "MuiSelect-outlined",
                                                                    "root": "MuiSelect-root",
                                                                    "select": "MuiSelect-select",
                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                  },
                                                                  "displayEmpty": false,
                                                                  "labelId": undefined,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "outlined",
                                                                }
                                                              }
                                                              label={
                                                                <React.Fragment>
                                                                  Select Status
                                                                </React.Fragment>
                                                              }
                                                              multiline={false}
                                                              name="status"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              value=""
                                                            >
                                                              <ForwardRef(OutlinedInput)
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                inputComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "propTypes": Object {
                                                                      "IconComponent": [Function],
                                                                      "MenuProps": [Function],
                                                                      "SelectDisplayProps": [Function],
                                                                      "aria-label": [Function],
                                                                      "autoFocus": [Function],
                                                                      "autoWidth": [Function],
                                                                      "children": [Function],
                                                                      "className": [Function],
                                                                      "classes": [Function],
                                                                      "defaultValue": [Function],
                                                                      "disabled": [Function],
                                                                      "displayEmpty": [Function],
                                                                      "inputRef": [Function],
                                                                      "labelId": [Function],
                                                                      "multiple": [Function],
                                                                      "name": [Function],
                                                                      "onBlur": [Function],
                                                                      "onChange": [Function],
                                                                      "onClose": [Function],
                                                                      "onFocus": [Function],
                                                                      "onOpen": [Function],
                                                                      "open": [Function],
                                                                      "readOnly": [Function],
                                                                      "renderValue": [Function],
                                                                      "tabIndex": [Function],
                                                                      "type": [Function],
                                                                      "value": [Function],
                                                                      "variant": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                inputProps={
                                                                  Object {
                                                                    "IconComponent": Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    },
                                                                    "MenuProps": undefined,
                                                                    "SelectDisplayProps": Object {
                                                                      "id": undefined,
                                                                    },
                                                                    "autoWidth": false,
                                                                    "children": Array [
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value="Open"
                                                                      >
                                                                        Open
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value="In Progress"
                                                                      >
                                                                        In Progress
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        value="Closed"
                                                                      >
                                                                        Closed
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                    ],
                                                                    "classes": Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    },
                                                                    "displayEmpty": false,
                                                                    "labelId": undefined,
                                                                    "multiple": false,
                                                                    "onClose": undefined,
                                                                    "onOpen": undefined,
                                                                    "open": undefined,
                                                                    "renderValue": undefined,
                                                                    "type": undefined,
                                                                    "variant": "outlined",
                                                                  }
                                                                }
                                                                label={
                                                                  <React.Fragment>
                                                                    Select Status
                                                                  </React.Fragment>
                                                                }
                                                                multiline={false}
                                                                name="status"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                value=""
                                                              >
                                                                <WithStyles(ForwardRef(InputBase))
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "input": "MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                      "marginDense": "MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiOutlinedInput-multiline",
                                                                      "notchedOutline": null,
                                                                      "root": "MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  inputComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "propTypes": Object {
                                                                        "IconComponent": [Function],
                                                                        "MenuProps": [Function],
                                                                        "SelectDisplayProps": [Function],
                                                                        "aria-label": [Function],
                                                                        "autoFocus": [Function],
                                                                        "autoWidth": [Function],
                                                                        "children": [Function],
                                                                        "className": [Function],
                                                                        "classes": [Function],
                                                                        "defaultValue": [Function],
                                                                        "disabled": [Function],
                                                                        "displayEmpty": [Function],
                                                                        "inputRef": [Function],
                                                                        "labelId": [Function],
                                                                        "multiple": [Function],
                                                                        "name": [Function],
                                                                        "onBlur": [Function],
                                                                        "onChange": [Function],
                                                                        "onClose": [Function],
                                                                        "onFocus": [Function],
                                                                        "onOpen": [Function],
                                                                        "open": [Function],
                                                                        "readOnly": [Function],
                                                                        "renderValue": [Function],
                                                                        "tabIndex": [Function],
                                                                        "type": [Function],
                                                                        "value": [Function],
                                                                        "variant": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  inputProps={
                                                                    Object {
                                                                      "IconComponent": Object {
                                                                        "$$typeof": Symbol(react.memo),
                                                                        "compare": null,
                                                                        "type": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "render": [Function],
                                                                        },
                                                                      },
                                                                      "MenuProps": undefined,
                                                                      "SelectDisplayProps": Object {
                                                                        "id": undefined,
                                                                      },
                                                                      "autoWidth": false,
                                                                      "children": Array [
                                                                        <WithStyles(ForwardRef(MenuItem))
                                                                          value="Open"
                                                                        >
                                                                          Open
                                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                                        <WithStyles(ForwardRef(MenuItem))
                                                                          value="In Progress"
                                                                        >
                                                                          In Progress
                                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                                        <WithStyles(ForwardRef(MenuItem))
                                                                          value="Closed"
                                                                        >
                                                                          Closed
                                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                                      ],
                                                                      "classes": Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "filled": "MuiSelect-filled",
                                                                        "icon": "MuiSelect-icon",
                                                                        "iconFilled": "MuiSelect-iconFilled",
                                                                        "iconOpen": "MuiSelect-iconOpen",
                                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                                        "nativeInput": "MuiSelect-nativeInput",
                                                                        "outlined": "MuiSelect-outlined",
                                                                        "root": "MuiSelect-root",
                                                                        "select": "MuiSelect-select",
                                                                        "selectMenu": "MuiSelect-selectMenu",
                                                                      },
                                                                      "displayEmpty": false,
                                                                      "labelId": undefined,
                                                                      "multiple": false,
                                                                      "onClose": undefined,
                                                                      "onOpen": undefined,
                                                                      "open": undefined,
                                                                      "renderValue": undefined,
                                                                      "type": undefined,
                                                                      "variant": "outlined",
                                                                    }
                                                                  }
                                                                  multiline={false}
                                                                  name="status"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderSuffix={[Function]}
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <ForwardRef(InputBase)
                                                                    autoFocus={false}
                                                                    classes={
                                                                      Object {
                                                                        "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                        "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                        "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                        "disabled": "Mui-disabled Mui-disabled",
                                                                        "error": "Mui-error Mui-error",
                                                                        "focused": "Mui-focused Mui-focused",
                                                                        "formControl": "MuiInputBase-formControl",
                                                                        "fullWidth": "MuiInputBase-fullWidth",
                                                                        "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                        "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                        "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                        "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                        "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                      }
                                                                    }
                                                                    fullWidth={true}
                                                                    inputComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "propTypes": Object {
                                                                          "IconComponent": [Function],
                                                                          "MenuProps": [Function],
                                                                          "SelectDisplayProps": [Function],
                                                                          "aria-label": [Function],
                                                                          "autoFocus": [Function],
                                                                          "autoWidth": [Function],
                                                                          "children": [Function],
                                                                          "className": [Function],
                                                                          "classes": [Function],
                                                                          "defaultValue": [Function],
                                                                          "disabled": [Function],
                                                                          "displayEmpty": [Function],
                                                                          "inputRef": [Function],
                                                                          "labelId": [Function],
                                                                          "multiple": [Function],
                                                                          "name": [Function],
                                                                          "onBlur": [Function],
                                                                          "onChange": [Function],
                                                                          "onClose": [Function],
                                                                          "onFocus": [Function],
                                                                          "onOpen": [Function],
                                                                          "open": [Function],
                                                                          "readOnly": [Function],
                                                                          "renderValue": [Function],
                                                                          "tabIndex": [Function],
                                                                          "type": [Function],
                                                                          "value": [Function],
                                                                          "variant": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    inputProps={
                                                                      Object {
                                                                        "IconComponent": Object {
                                                                          "$$typeof": Symbol(react.memo),
                                                                          "compare": null,
                                                                          "type": Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "render": [Function],
                                                                          },
                                                                        },
                                                                        "MenuProps": undefined,
                                                                        "SelectDisplayProps": Object {
                                                                          "id": undefined,
                                                                        },
                                                                        "autoWidth": false,
                                                                        "children": Array [
                                                                          <WithStyles(ForwardRef(MenuItem))
                                                                            value="Open"
                                                                          >
                                                                            Open
                                                                          </WithStyles(ForwardRef(MenuItem))>,
                                                                          <WithStyles(ForwardRef(MenuItem))
                                                                            value="In Progress"
                                                                          >
                                                                            In Progress
                                                                          </WithStyles(ForwardRef(MenuItem))>,
                                                                          <WithStyles(ForwardRef(MenuItem))
                                                                            value="Closed"
                                                                          >
                                                                            Closed
                                                                          </WithStyles(ForwardRef(MenuItem))>,
                                                                        ],
                                                                        "classes": Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "filled": "MuiSelect-filled",
                                                                          "icon": "MuiSelect-icon",
                                                                          "iconFilled": "MuiSelect-iconFilled",
                                                                          "iconOpen": "MuiSelect-iconOpen",
                                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                                          "nativeInput": "MuiSelect-nativeInput",
                                                                          "outlined": "MuiSelect-outlined",
                                                                          "root": "MuiSelect-root",
                                                                          "select": "MuiSelect-select",
                                                                          "selectMenu": "MuiSelect-selectMenu",
                                                                        },
                                                                        "displayEmpty": false,
                                                                        "labelId": undefined,
                                                                        "multiple": false,
                                                                        "onClose": undefined,
                                                                        "onOpen": undefined,
                                                                        "open": undefined,
                                                                        "renderValue": undefined,
                                                                        "type": undefined,
                                                                        "variant": "outlined",
                                                                      }
                                                                    }
                                                                    multiline={false}
                                                                    name="status"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    renderSuffix={[Function]}
                                                                    type="text"
                                                                    value=""
                                                                  >
                                                                    <div
                                                                      className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(SelectInput)
                                                                        IconComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.memo),
                                                                            "compare": null,
                                                                            "type": Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "render": [Function],
                                                                            },
                                                                          }
                                                                        }
                                                                        SelectDisplayProps={
                                                                          Object {
                                                                            "id": undefined,
                                                                          }
                                                                        }
                                                                        aria-invalid={false}
                                                                        autoFocus={false}
                                                                        autoWidth={false}
                                                                        className="MuiInputBase-input MuiOutlinedInput-input"
                                                                        classes={
                                                                          Object {
                                                                            "disabled": "Mui-disabled",
                                                                            "filled": "MuiSelect-filled",
                                                                            "icon": "MuiSelect-icon",
                                                                            "iconFilled": "MuiSelect-iconFilled",
                                                                            "iconOpen": "MuiSelect-iconOpen",
                                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                                            "nativeInput": "MuiSelect-nativeInput",
                                                                            "outlined": "MuiSelect-outlined",
                                                                            "root": "MuiSelect-root",
                                                                            "select": "MuiSelect-select",
                                                                            "selectMenu": "MuiSelect-selectMenu",
                                                                          }
                                                                        }
                                                                        disabled={false}
                                                                        displayEmpty={false}
                                                                        inputRef={[Function]}
                                                                        multiple={false}
                                                                        name="status"
                                                                        onAnimationStart={[Function]}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        required={false}
                                                                        value=""
                                                                        variant="outlined"
                                                                      >
                                                                        <div
                                                                          aria-haspopup="listbox"
                                                                          aria-labelledby="mui-component-select-status"
                                                                          className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                          id="mui-component-select-status"
                                                                          onBlur={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          <span
                                                                            dangerouslySetInnerHTML={
                                                                              Object {
                                                                                "__html": "&#8203;",
                                                                              }
                                                                            }
                                                                          />
                                                                        </div>
                                                                        <input
                                                                          aria-hidden={true}
                                                                          autoFocus={false}
                                                                          className="MuiSelect-nativeInput"
                                                                          name="status"
                                                                          onAnimationStart={[Function]}
                                                                          onChange={[Function]}
                                                                          required={false}
                                                                          tabIndex={-1}
                                                                          value=""
                                                                        />
                                                                        <ForwardRef(ArrowDropDownIcon)
                                                                          className="MuiSelect-icon MuiSelect-iconOutlined"
                                                                        >
                                                                          <WithStyles(ForwardRef(SvgIcon))
                                                                            className="MuiSelect-icon MuiSelect-iconOutlined"
                                                                          >
                                                                            <ForwardRef(SvgIcon)
                                                                              className="MuiSelect-icon MuiSelect-iconOutlined"
                                                                              classes={
                                                                                Object {
                                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                  "root": "MuiSvgIcon-root",
                                                                                }
                                                                              }
                                                                            >
                                                                              <svg
                                                                                aria-hidden={true}
                                                                                className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconOutlined"
                                                                                focusable="false"
                                                                                viewBox="0 0 24 24"
                                                                              >
                                                                                <path
                                                                                  d="M7 10l5 5 5-5z"
                                                                                />
                                                                              </svg>
                                                                            </ForwardRef(SvgIcon)>
                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                        </ForwardRef(ArrowDropDownIcon)>
                                                                        <WithStyles(ForwardRef(Menu))
                                                                          MenuListProps={
                                                                            Object {
                                                                              "aria-labelledby": undefined,
                                                                              "disableListWrap": true,
                                                                              "role": "listbox",
                                                                            }
                                                                          }
                                                                          PaperProps={
                                                                            Object {
                                                                              "style": Object {
                                                                                "minWidth": undefined,
                                                                              },
                                                                            }
                                                                          }
                                                                          anchorEl={
                                                                            <div
                                                                              aria-haspopup="listbox"
                                                                              aria-labelledby="mui-component-select-status"
                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                              id="mui-component-select-status"
                                                                              role="button"
                                                                              tabindex="0"
                                                                            >
                                                                              <span>
                                                                                ​
                                                                              </span>
                                                                            </div>
                                                                          }
                                                                          id="menu-status"
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                        >
                                                                          <ForwardRef(Menu)
                                                                            MenuListProps={
                                                                              Object {
                                                                                "aria-labelledby": undefined,
                                                                                "disableListWrap": true,
                                                                                "role": "listbox",
                                                                              }
                                                                            }
                                                                            PaperProps={
                                                                              Object {
                                                                                "style": Object {
                                                                                  "minWidth": undefined,
                                                                                },
                                                                              }
                                                                            }
                                                                            anchorEl={
                                                                              <div
                                                                                aria-haspopup="listbox"
                                                                                aria-labelledby="mui-component-select-status"
                                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                                id="mui-component-select-status"
                                                                                role="button"
                                                                                tabindex="0"
                                                                              >
                                                                                <span>
                                                                                  ​
                                                                                </span>
                                                                              </div>
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "list": "MuiMenu-list",
                                                                                "paper": "MuiMenu-paper",
                                                                              }
                                                                            }
                                                                            id="menu-status"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                          >
                                                                            <WithStyles(ForwardRef(Popover))
                                                                              PaperProps={
                                                                                Object {
                                                                                  "classes": Object {
                                                                                    "root": "MuiMenu-paper",
                                                                                  },
                                                                                  "style": Object {
                                                                                    "minWidth": undefined,
                                                                                  },
                                                                                }
                                                                              }
                                                                              anchorEl={
                                                                                <div
                                                                                  aria-haspopup="listbox"
                                                                                  aria-labelledby="mui-component-select-status"
                                                                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                                  id="mui-component-select-status"
                                                                                  role="button"
                                                                                  tabindex="0"
                                                                                >
                                                                                  <span>
                                                                                    ​
                                                                                  </span>
                                                                                </div>
                                                                              }
                                                                              anchorOrigin={
                                                                                Object {
                                                                                  "horizontal": "left",
                                                                                  "vertical": "top",
                                                                                }
                                                                              }
                                                                              getContentAnchorEl={[Function]}
                                                                              id="menu-status"
                                                                              onClose={[Function]}
                                                                              onEntering={[Function]}
                                                                              open={false}
                                                                              transformOrigin={
                                                                                Object {
                                                                                  "horizontal": "left",
                                                                                  "vertical": "top",
                                                                                }
                                                                              }
                                                                              transitionDuration="auto"
                                                                            >
                                                                              <ForwardRef(Popover)
                                                                                PaperProps={
                                                                                  Object {
                                                                                    "classes": Object {
                                                                                      "root": "MuiMenu-paper",
                                                                                    },
                                                                                    "style": Object {
                                                                                      "minWidth": undefined,
                                                                                    },
                                                                                  }
                                                                                }
                                                                                anchorEl={
                                                                                  <div
                                                                                    aria-haspopup="listbox"
                                                                                    aria-labelledby="mui-component-select-status"
                                                                                    class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                                    id="mui-component-select-status"
                                                                                    role="button"
                                                                                    tabindex="0"
                                                                                  >
                                                                                    <span>
                                                                                      ​
                                                                                    </span>
                                                                                  </div>
                                                                                }
                                                                                anchorOrigin={
                                                                                  Object {
                                                                                    "horizontal": "left",
                                                                                    "vertical": "top",
                                                                                  }
                                                                                }
                                                                                classes={
                                                                                  Object {
                                                                                    "paper": "MuiPopover-paper",
                                                                                    "root": "MuiPopover-root",
                                                                                  }
                                                                                }
                                                                                getContentAnchorEl={[Function]}
                                                                                id="menu-status"
                                                                                onClose={[Function]}
                                                                                onEntering={[Function]}
                                                                                open={false}
                                                                                transformOrigin={
                                                                                  Object {
                                                                                    "horizontal": "left",
                                                                                    "vertical": "top",
                                                                                  }
                                                                                }
                                                                                transitionDuration="auto"
                                                                              >
                                                                                <ForwardRef(Modal)
                                                                                  BackdropProps={
                                                                                    Object {
                                                                                      "invisible": true,
                                                                                    }
                                                                                  }
                                                                                  className="MuiPopover-root"
                                                                                  container={<body />}
                                                                                  id="menu-status"
                                                                                  onClose={[Function]}
                                                                                  open={false}
                                                                                />
                                                                              </ForwardRef(Popover)>
                                                                            </WithStyles(ForwardRef(Popover))>
                                                                          </ForwardRef(Menu)>
                                                                        </WithStyles(ForwardRef(Menu))>
                                                                      </ForwardRef(SelectInput)>
                                                                      <WithStyles(ForwardRef(NotchedOutline))
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        label={
                                                                          <React.Fragment>
                                                                            Select Status
                                                                          </React.Fragment>
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={false}
                                                                      >
                                                                        <ForwardRef(NotchedOutline)
                                                                          className="MuiOutlinedInput-notchedOutline"
                                                                          classes={
                                                                            Object {
                                                                              "legend": "PrivateNotchedOutline-legend-6",
                                                                              "legendLabelled": "PrivateNotchedOutline-legendLabelled-7",
                                                                              "legendNotched": "PrivateNotchedOutline-legendNotched-8",
                                                                              "root": "PrivateNotchedOutline-root-5",
                                                                            }
                                                                          }
                                                                          label={
                                                                            <React.Fragment>
                                                                              Select Status
                                                                            </React.Fragment>
                                                                          }
                                                                          labelWidth={0}
                                                                          notched={false}
                                                                        >
                                                                          <fieldset
                                                                            aria-hidden={true}
                                                                            className="PrivateNotchedOutline-root-5 MuiOutlinedInput-notchedOutline"
                                                                          >
                                                                            <legend
                                                                              className="PrivateNotchedOutline-legendLabelled-7"
                                                                            >
                                                                              <span>
                                                                                Select Status
                                                                              </span>
                                                                            </legend>
                                                                          </fieldset>
                                                                        </ForwardRef(NotchedOutline)>
                                                                      </WithStyles(ForwardRef(NotchedOutline))>
                                                                    </div>
                                                                  </ForwardRef(InputBase)>
                                                                </WithStyles(ForwardRef(InputBase))>
                                                              </ForwardRef(OutlinedInput)>
                                                            </WithStyles(ForwardRef(OutlinedInput))>
                                                          </ForwardRef(Select)>
                                                        </WithStyles(ForwardRef(Select))>
                                                      </div>
                                                    </ForwardRef(FormControl)>
                                                  </WithStyles(ForwardRef(FormControl))>
                                                </ForwardRef(TextField)>
                                              </WithStyles(ForwardRef(TextField))>
                                            </SelectWrapper>
                                          </div>
                                        </ForwardRef(Grid)>
                                      </WithStyles(ForwardRef(Grid))>
                                      <WithStyles(ForwardRef(Grid))
                                        item={true}
                                        xs={12}
                                      >
                                        <ForwardRef(Grid)
                                          classes={
                                            Object {
                                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                              "container": "MuiGrid-container",
                                              "direction-xs-column": "MuiGrid-direction-xs-column",
                                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                              "grid-lg-1": "MuiGrid-grid-lg-1",
                                              "grid-lg-10": "MuiGrid-grid-lg-10",
                                              "grid-lg-11": "MuiGrid-grid-lg-11",
                                              "grid-lg-12": "MuiGrid-grid-lg-12",
                                              "grid-lg-2": "MuiGrid-grid-lg-2",
                                              "grid-lg-3": "MuiGrid-grid-lg-3",
                                              "grid-lg-4": "MuiGrid-grid-lg-4",
                                              "grid-lg-5": "MuiGrid-grid-lg-5",
                                              "grid-lg-6": "MuiGrid-grid-lg-6",
                                              "grid-lg-7": "MuiGrid-grid-lg-7",
                                              "grid-lg-8": "MuiGrid-grid-lg-8",
                                              "grid-lg-9": "MuiGrid-grid-lg-9",
                                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                              "grid-lg-true": "MuiGrid-grid-lg-true",
                                              "grid-md-1": "MuiGrid-grid-md-1",
                                              "grid-md-10": "MuiGrid-grid-md-10",
                                              "grid-md-11": "MuiGrid-grid-md-11",
                                              "grid-md-12": "MuiGrid-grid-md-12",
                                              "grid-md-2": "MuiGrid-grid-md-2",
                                              "grid-md-3": "MuiGrid-grid-md-3",
                                              "grid-md-4": "MuiGrid-grid-md-4",
                                              "grid-md-5": "MuiGrid-grid-md-5",
                                              "grid-md-6": "MuiGrid-grid-md-6",
                                              "grid-md-7": "MuiGrid-grid-md-7",
                                              "grid-md-8": "MuiGrid-grid-md-8",
                                              "grid-md-9": "MuiGrid-grid-md-9",
                                              "grid-md-auto": "MuiGrid-grid-md-auto",
                                              "grid-md-true": "MuiGrid-grid-md-true",
                                              "grid-sm-1": "MuiGrid-grid-sm-1",
                                              "grid-sm-10": "MuiGrid-grid-sm-10",
                                              "grid-sm-11": "MuiGrid-grid-sm-11",
                                              "grid-sm-12": "MuiGrid-grid-sm-12",
                                              "grid-sm-2": "MuiGrid-grid-sm-2",
                                              "grid-sm-3": "MuiGrid-grid-sm-3",
                                              "grid-sm-4": "MuiGrid-grid-sm-4",
                                              "grid-sm-5": "MuiGrid-grid-sm-5",
                                              "grid-sm-6": "MuiGrid-grid-sm-6",
                                              "grid-sm-7": "MuiGrid-grid-sm-7",
                                              "grid-sm-8": "MuiGrid-grid-sm-8",
                                              "grid-sm-9": "MuiGrid-grid-sm-9",
                                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                              "grid-sm-true": "MuiGrid-grid-sm-true",
                                              "grid-xl-1": "MuiGrid-grid-xl-1",
                                              "grid-xl-10": "MuiGrid-grid-xl-10",
                                              "grid-xl-11": "MuiGrid-grid-xl-11",
                                              "grid-xl-12": "MuiGrid-grid-xl-12",
                                              "grid-xl-2": "MuiGrid-grid-xl-2",
                                              "grid-xl-3": "MuiGrid-grid-xl-3",
                                              "grid-xl-4": "MuiGrid-grid-xl-4",
                                              "grid-xl-5": "MuiGrid-grid-xl-5",
                                              "grid-xl-6": "MuiGrid-grid-xl-6",
                                              "grid-xl-7": "MuiGrid-grid-xl-7",
                                              "grid-xl-8": "MuiGrid-grid-xl-8",
                                              "grid-xl-9": "MuiGrid-grid-xl-9",
                                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                              "grid-xl-true": "MuiGrid-grid-xl-true",
                                              "grid-xs-1": "MuiGrid-grid-xs-1",
                                              "grid-xs-10": "MuiGrid-grid-xs-10",
                                              "grid-xs-11": "MuiGrid-grid-xs-11",
                                              "grid-xs-12": "MuiGrid-grid-xs-12",
                                              "grid-xs-2": "MuiGrid-grid-xs-2",
                                              "grid-xs-3": "MuiGrid-grid-xs-3",
                                              "grid-xs-4": "MuiGrid-grid-xs-4",
                                              "grid-xs-5": "MuiGrid-grid-xs-5",
                                              "grid-xs-6": "MuiGrid-grid-xs-6",
                                              "grid-xs-7": "MuiGrid-grid-xs-7",
                                              "grid-xs-8": "MuiGrid-grid-xs-8",
                                              "grid-xs-9": "MuiGrid-grid-xs-9",
                                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                              "grid-xs-true": "MuiGrid-grid-xs-true",
                                              "item": "MuiGrid-item",
                                              "justify-xs-center": "MuiGrid-justify-xs-center",
                                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                              "root": "MuiGrid-root",
                                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                            }
                                          }
                                          item={true}
                                          xs={12}
                                        >
                                          <div
                                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                                          >
                                            <TextWrapper
                                              label="Date Created"
                                              name="cdate"
                                            >
                                              <WithStyles(ForwardRef(TextField))
                                                fullWidth={true}
                                                label="Date Created"
                                                name="cdate"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                value=""
                                                variant="outlined"
                                              >
                                                <ForwardRef(TextField)
                                                  classes={
                                                    Object {
                                                      "root": "MuiTextField-root",
                                                    }
                                                  }
                                                  fullWidth={true}
                                                  label="Date Created"
                                                  name="cdate"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  value=""
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ForwardRef(FormControl))
                                                    className="MuiTextField-root"
                                                    color="primary"
                                                    disabled={false}
                                                    error={false}
                                                    fullWidth={true}
                                                    required={false}
                                                    variant="outlined"
                                                  >
                                                    <ForwardRef(FormControl)
                                                      className="MuiTextField-root"
                                                      classes={
                                                        Object {
                                                          "fullWidth": "MuiFormControl-fullWidth",
                                                          "marginDense": "MuiFormControl-marginDense",
                                                          "marginNormal": "MuiFormControl-marginNormal",
                                                          "root": "MuiFormControl-root",
                                                        }
                                                      }
                                                      color="primary"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      required={false}
                                                      variant="outlined"
                                                    >
                                                      <div
                                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                      >
                                                        <WithStyles(ForwardRef(InputLabel))>
                                                          <ForwardRef(InputLabel)
                                                            classes={
                                                              Object {
                                                                "animated": "MuiInputLabel-animated",
                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "filled": "MuiInputLabel-filled",
                                                                "focused": "Mui-focused",
                                                                "formControl": "MuiInputLabel-formControl",
                                                                "marginDense": "MuiInputLabel-marginDense",
                                                                "outlined": "MuiInputLabel-outlined",
                                                                "required": "Mui-required",
                                                                "root": "MuiInputLabel-root",
                                                                "shrink": "MuiInputLabel-shrink",
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(FormLabel))
                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                              classes={
                                                                Object {
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "required": "Mui-required",
                                                                }
                                                              }
                                                              data-shrink={false}
                                                            >
                                                              <ForwardRef(FormLabel)
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "filled": "MuiFormLabel-filled",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "required": "Mui-required Mui-required",
                                                                    "root": "MuiFormLabel-root",
                                                                  }
                                                                }
                                                                data-shrink={false}
                                                              >
                                                                <label
                                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                  data-shrink={false}
                                                                >
                                                                  Date Created
                                                                </label>
                                                              </ForwardRef(FormLabel)>
                                                            </WithStyles(ForwardRef(FormLabel))>
                                                          </ForwardRef(InputLabel)>
                                                        </WithStyles(ForwardRef(InputLabel))>
                                                        <WithStyles(ForwardRef(OutlinedInput))
                                                          autoFocus={false}
                                                          fullWidth={true}
                                                          label={
                                                            <React.Fragment>
                                                              Date Created
                                                            </React.Fragment>
                                                          }
                                                          multiline={false}
                                                          name="cdate"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          value=""
                                                        >
                                                          <ForwardRef(OutlinedInput)
                                                            autoFocus={false}
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "input": "MuiOutlinedInput-input",
                                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                                "multiline": "MuiOutlinedInput-multiline",
                                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                "root": "MuiOutlinedInput-root",
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            label={
                                                              <React.Fragment>
                                                                Date Created
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="cdate"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <WithStyles(ForwardRef(InputBase))
                                                              autoFocus={false}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": null,
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              inputComponent="input"
                                                              multiline={false}
                                                              name="cdate"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              renderSuffix={[Function]}
                                                              type="text"
                                                              value=""
                                                            >
                                                              <ForwardRef(InputBase)
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "formControl": "MuiInputBase-formControl",
                                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="cdate"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                  onClick={[Function]}
                                                                >
                                                                  <input
                                                                    aria-invalid={false}
                                                                    autoFocus={false}
                                                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                                                    disabled={false}
                                                                    name="cdate"
                                                                    onAnimationStart={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    type="text"
                                                                    value=""
                                                                  />
                                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                                    className="MuiOutlinedInput-notchedOutline"
                                                                    label={
                                                                      <React.Fragment>
                                                                        Date Created
                                                                      </React.Fragment>
                                                                    }
                                                                    labelWidth={0}
                                                                    notched={false}
                                                                  >
                                                                    <ForwardRef(NotchedOutline)
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      classes={
                                                                        Object {
                                                                          "legend": "PrivateNotchedOutline-legend-6",
                                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-7",
                                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-8",
                                                                          "root": "PrivateNotchedOutline-root-5",
                                                                        }
                                                                      }
                                                                      label={
                                                                        <React.Fragment>
                                                                          Date Created
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={false}
                                                                    >
                                                                      <fieldset
                                                                        aria-hidden={true}
                                                                        className="PrivateNotchedOutline-root-5 MuiOutlinedInput-notchedOutline"
                                                                      >
                                                                        <legend
                                                                          className="PrivateNotchedOutline-legendLabelled-7"
                                                                        >
                                                                          <span>
                                                                            Date Created
                                                                          </span>
                                                                        </legend>
                                                                      </fieldset>
                                                                    </ForwardRef(NotchedOutline)>
                                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                                </div>
                                                              </ForwardRef(InputBase)>
                                                            </WithStyles(ForwardRef(InputBase))>
                                                          </ForwardRef(OutlinedInput)>
                                                        </WithStyles(ForwardRef(OutlinedInput))>
                                                      </div>
                                                    </ForwardRef(FormControl)>
                                                  </WithStyles(ForwardRef(FormControl))>
                                                </ForwardRef(TextField)>
                                              </WithStyles(ForwardRef(TextField))>
                                            </TextWrapper>
                                          </div>
                                        </ForwardRef(Grid)>
                                      </WithStyles(ForwardRef(Grid))>
                                      <WithStyles(ForwardRef(Grid))
                                        item={true}
                                        xs={12}
                                      >
                                        <ForwardRef(Grid)
                                          classes={
                                            Object {
                                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                              "container": "MuiGrid-container",
                                              "direction-xs-column": "MuiGrid-direction-xs-column",
                                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                              "grid-lg-1": "MuiGrid-grid-lg-1",
                                              "grid-lg-10": "MuiGrid-grid-lg-10",
                                              "grid-lg-11": "MuiGrid-grid-lg-11",
                                              "grid-lg-12": "MuiGrid-grid-lg-12",
                                              "grid-lg-2": "MuiGrid-grid-lg-2",
                                              "grid-lg-3": "MuiGrid-grid-lg-3",
                                              "grid-lg-4": "MuiGrid-grid-lg-4",
                                              "grid-lg-5": "MuiGrid-grid-lg-5",
                                              "grid-lg-6": "MuiGrid-grid-lg-6",
                                              "grid-lg-7": "MuiGrid-grid-lg-7",
                                              "grid-lg-8": "MuiGrid-grid-lg-8",
                                              "grid-lg-9": "MuiGrid-grid-lg-9",
                                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                              "grid-lg-true": "MuiGrid-grid-lg-true",
                                              "grid-md-1": "MuiGrid-grid-md-1",
                                              "grid-md-10": "MuiGrid-grid-md-10",
                                              "grid-md-11": "MuiGrid-grid-md-11",
                                              "grid-md-12": "MuiGrid-grid-md-12",
                                              "grid-md-2": "MuiGrid-grid-md-2",
                                              "grid-md-3": "MuiGrid-grid-md-3",
                                              "grid-md-4": "MuiGrid-grid-md-4",
                                              "grid-md-5": "MuiGrid-grid-md-5",
                                              "grid-md-6": "MuiGrid-grid-md-6",
                                              "grid-md-7": "MuiGrid-grid-md-7",
                                              "grid-md-8": "MuiGrid-grid-md-8",
                                              "grid-md-9": "MuiGrid-grid-md-9",
                                              "grid-md-auto": "MuiGrid-grid-md-auto",
                                              "grid-md-true": "MuiGrid-grid-md-true",
                                              "grid-sm-1": "MuiGrid-grid-sm-1",
                                              "grid-sm-10": "MuiGrid-grid-sm-10",
                                              "grid-sm-11": "MuiGrid-grid-sm-11",
                                              "grid-sm-12": "MuiGrid-grid-sm-12",
                                              "grid-sm-2": "MuiGrid-grid-sm-2",
                                              "grid-sm-3": "MuiGrid-grid-sm-3",
                                              "grid-sm-4": "MuiGrid-grid-sm-4",
                                              "grid-sm-5": "MuiGrid-grid-sm-5",
                                              "grid-sm-6": "MuiGrid-grid-sm-6",
                                              "grid-sm-7": "MuiGrid-grid-sm-7",
                                              "grid-sm-8": "MuiGrid-grid-sm-8",
                                              "grid-sm-9": "MuiGrid-grid-sm-9",
                                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                              "grid-sm-true": "MuiGrid-grid-sm-true",
                                              "grid-xl-1": "MuiGrid-grid-xl-1",
                                              "grid-xl-10": "MuiGrid-grid-xl-10",
                                              "grid-xl-11": "MuiGrid-grid-xl-11",
                                              "grid-xl-12": "MuiGrid-grid-xl-12",
                                              "grid-xl-2": "MuiGrid-grid-xl-2",
                                              "grid-xl-3": "MuiGrid-grid-xl-3",
                                              "grid-xl-4": "MuiGrid-grid-xl-4",
                                              "grid-xl-5": "MuiGrid-grid-xl-5",
                                              "grid-xl-6": "MuiGrid-grid-xl-6",
                                              "grid-xl-7": "MuiGrid-grid-xl-7",
                                              "grid-xl-8": "MuiGrid-grid-xl-8",
                                              "grid-xl-9": "MuiGrid-grid-xl-9",
                                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                              "grid-xl-true": "MuiGrid-grid-xl-true",
                                              "grid-xs-1": "MuiGrid-grid-xs-1",
                                              "grid-xs-10": "MuiGrid-grid-xs-10",
                                              "grid-xs-11": "MuiGrid-grid-xs-11",
                                              "grid-xs-12": "MuiGrid-grid-xs-12",
                                              "grid-xs-2": "MuiGrid-grid-xs-2",
                                              "grid-xs-3": "MuiGrid-grid-xs-3",
                                              "grid-xs-4": "MuiGrid-grid-xs-4",
                                              "grid-xs-5": "MuiGrid-grid-xs-5",
                                              "grid-xs-6": "MuiGrid-grid-xs-6",
                                              "grid-xs-7": "MuiGrid-grid-xs-7",
                                              "grid-xs-8": "MuiGrid-grid-xs-8",
                                              "grid-xs-9": "MuiGrid-grid-xs-9",
                                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                              "grid-xs-true": "MuiGrid-grid-xs-true",
                                              "item": "MuiGrid-item",
                                              "justify-xs-center": "MuiGrid-justify-xs-center",
                                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                              "root": "MuiGrid-root",
                                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                            }
                                          }
                                          item={true}
                                          xs={12}
                                        >
                                          <div
                                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                                          >
                                            <TextWrapper
                                              label="Date Closed"
                                              name="rdate"
                                            >
                                              <WithStyles(ForwardRef(TextField))
                                                fullWidth={true}
                                                label="Date Closed"
                                                name="rdate"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                value=""
                                                variant="outlined"
                                              >
                                                <ForwardRef(TextField)
                                                  classes={
                                                    Object {
                                                      "root": "MuiTextField-root",
                                                    }
                                                  }
                                                  fullWidth={true}
                                                  label="Date Closed"
                                                  name="rdate"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  value=""
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ForwardRef(FormControl))
                                                    className="MuiTextField-root"
                                                    color="primary"
                                                    disabled={false}
                                                    error={false}
                                                    fullWidth={true}
                                                    required={false}
                                                    variant="outlined"
                                                  >
                                                    <ForwardRef(FormControl)
                                                      className="MuiTextField-root"
                                                      classes={
                                                        Object {
                                                          "fullWidth": "MuiFormControl-fullWidth",
                                                          "marginDense": "MuiFormControl-marginDense",
                                                          "marginNormal": "MuiFormControl-marginNormal",
                                                          "root": "MuiFormControl-root",
                                                        }
                                                      }
                                                      color="primary"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      required={false}
                                                      variant="outlined"
                                                    >
                                                      <div
                                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                      >
                                                        <WithStyles(ForwardRef(InputLabel))>
                                                          <ForwardRef(InputLabel)
                                                            classes={
                                                              Object {
                                                                "animated": "MuiInputLabel-animated",
                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "filled": "MuiInputLabel-filled",
                                                                "focused": "Mui-focused",
                                                                "formControl": "MuiInputLabel-formControl",
                                                                "marginDense": "MuiInputLabel-marginDense",
                                                                "outlined": "MuiInputLabel-outlined",
                                                                "required": "Mui-required",
                                                                "root": "MuiInputLabel-root",
                                                                "shrink": "MuiInputLabel-shrink",
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(FormLabel))
                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                              classes={
                                                                Object {
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "required": "Mui-required",
                                                                }
                                                              }
                                                              data-shrink={false}
                                                            >
                                                              <ForwardRef(FormLabel)
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "filled": "MuiFormLabel-filled",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "required": "Mui-required Mui-required",
                                                                    "root": "MuiFormLabel-root",
                                                                  }
                                                                }
                                                                data-shrink={false}
                                                              >
                                                                <label
                                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                  data-shrink={false}
                                                                >
                                                                  Date Closed
                                                                </label>
                                                              </ForwardRef(FormLabel)>
                                                            </WithStyles(ForwardRef(FormLabel))>
                                                          </ForwardRef(InputLabel)>
                                                        </WithStyles(ForwardRef(InputLabel))>
                                                        <WithStyles(ForwardRef(OutlinedInput))
                                                          autoFocus={false}
                                                          fullWidth={true}
                                                          label={
                                                            <React.Fragment>
                                                              Date Closed
                                                            </React.Fragment>
                                                          }
                                                          multiline={false}
                                                          name="rdate"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          value=""
                                                        >
                                                          <ForwardRef(OutlinedInput)
                                                            autoFocus={false}
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "input": "MuiOutlinedInput-input",
                                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                                "multiline": "MuiOutlinedInput-multiline",
                                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                "root": "MuiOutlinedInput-root",
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            label={
                                                              <React.Fragment>
                                                                Date Closed
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                            name="rdate"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <WithStyles(ForwardRef(InputBase))
                                                              autoFocus={false}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": null,
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              inputComponent="input"
                                                              multiline={false}
                                                              name="rdate"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              renderSuffix={[Function]}
                                                              type="text"
                                                              value=""
                                                            >
                                                              <ForwardRef(InputBase)
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "formControl": "MuiInputBase-formControl",
                                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="rdate"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                  onClick={[Function]}
                                                                >
                                                                  <input
                                                                    aria-invalid={false}
                                                                    autoFocus={false}
                                                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                                                    disabled={false}
                                                                    name="rdate"
                                                                    onAnimationStart={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    type="text"
                                                                    value=""
                                                                  />
                                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                                    className="MuiOutlinedInput-notchedOutline"
                                                                    label={
                                                                      <React.Fragment>
                                                                        Date Closed
                                                                      </React.Fragment>
                                                                    }
                                                                    labelWidth={0}
                                                                    notched={false}
                                                                  >
                                                                    <ForwardRef(NotchedOutline)
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      classes={
                                                                        Object {
                                                                          "legend": "PrivateNotchedOutline-legend-6",
                                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-7",
                                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-8",
                                                                          "root": "PrivateNotchedOutline-root-5",
                                                                        }
                                                                      }
                                                                      label={
                                                                        <React.Fragment>
                                                                          Date Closed
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={false}
                                                                    >
                                                                      <fieldset
                                                                        aria-hidden={true}
                                                                        className="PrivateNotchedOutline-root-5 MuiOutlinedInput-notchedOutline"
                                                                      >
                                                                        <legend
                                                                          className="PrivateNotchedOutline-legendLabelled-7"
                                                                        >
                                                                          <span>
                                                                            Date Closed
                                                                          </span>
                                                                        </legend>
                                                                      </fieldset>
                                                                    </ForwardRef(NotchedOutline)>
                                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                                </div>
                                                              </ForwardRef(InputBase)>
                                                            </WithStyles(ForwardRef(InputBase))>
                                                          </ForwardRef(OutlinedInput)>
                                                        </WithStyles(ForwardRef(OutlinedInput))>
                                                      </div>
                                                    </ForwardRef(FormControl)>
                                                  </WithStyles(ForwardRef(FormControl))>
                                                </ForwardRef(TextField)>
                                              </WithStyles(ForwardRef(TextField))>
                                            </TextWrapper>
                                          </div>
                                        </ForwardRef(Grid)>
                                      </WithStyles(ForwardRef(Grid))>
                                      <WithStyles(ForwardRef(Grid))
                                        item={true}
                                        xs={12}
                                      >
                                        <ForwardRef(Grid)
                                          classes={
                                            Object {
                                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                              "container": "MuiGrid-container",
                                              "direction-xs-column": "MuiGrid-direction-xs-column",
                                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                              "grid-lg-1": "MuiGrid-grid-lg-1",
                                              "grid-lg-10": "MuiGrid-grid-lg-10",
                                              "grid-lg-11": "MuiGrid-grid-lg-11",
                                              "grid-lg-12": "MuiGrid-grid-lg-12",
                                              "grid-lg-2": "MuiGrid-grid-lg-2",
                                              "grid-lg-3": "MuiGrid-grid-lg-3",
                                              "grid-lg-4": "MuiGrid-grid-lg-4",
                                              "grid-lg-5": "MuiGrid-grid-lg-5",
                                              "grid-lg-6": "MuiGrid-grid-lg-6",
                                              "grid-lg-7": "MuiGrid-grid-lg-7",
                                              "grid-lg-8": "MuiGrid-grid-lg-8",
                                              "grid-lg-9": "MuiGrid-grid-lg-9",
                                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                              "grid-lg-true": "MuiGrid-grid-lg-true",
                                              "grid-md-1": "MuiGrid-grid-md-1",
                                              "grid-md-10": "MuiGrid-grid-md-10",
                                              "grid-md-11": "MuiGrid-grid-md-11",
                                              "grid-md-12": "MuiGrid-grid-md-12",
                                              "grid-md-2": "MuiGrid-grid-md-2",
                                              "grid-md-3": "MuiGrid-grid-md-3",
                                              "grid-md-4": "MuiGrid-grid-md-4",
                                              "grid-md-5": "MuiGrid-grid-md-5",
                                              "grid-md-6": "MuiGrid-grid-md-6",
                                              "grid-md-7": "MuiGrid-grid-md-7",
                                              "grid-md-8": "MuiGrid-grid-md-8",
                                              "grid-md-9": "MuiGrid-grid-md-9",
                                              "grid-md-auto": "MuiGrid-grid-md-auto",
                                              "grid-md-true": "MuiGrid-grid-md-true",
                                              "grid-sm-1": "MuiGrid-grid-sm-1",
                                              "grid-sm-10": "MuiGrid-grid-sm-10",
                                              "grid-sm-11": "MuiGrid-grid-sm-11",
                                              "grid-sm-12": "MuiGrid-grid-sm-12",
                                              "grid-sm-2": "MuiGrid-grid-sm-2",
                                              "grid-sm-3": "MuiGrid-grid-sm-3",
                                              "grid-sm-4": "MuiGrid-grid-sm-4",
                                              "grid-sm-5": "MuiGrid-grid-sm-5",
                                              "grid-sm-6": "MuiGrid-grid-sm-6",
                                              "grid-sm-7": "MuiGrid-grid-sm-7",
                                              "grid-sm-8": "MuiGrid-grid-sm-8",
                                              "grid-sm-9": "MuiGrid-grid-sm-9",
                                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                              "grid-sm-true": "MuiGrid-grid-sm-true",
                                              "grid-xl-1": "MuiGrid-grid-xl-1",
                                              "grid-xl-10": "MuiGrid-grid-xl-10",
                                              "grid-xl-11": "MuiGrid-grid-xl-11",
                                              "grid-xl-12": "MuiGrid-grid-xl-12",
                                              "grid-xl-2": "MuiGrid-grid-xl-2",
                                              "grid-xl-3": "MuiGrid-grid-xl-3",
                                              "grid-xl-4": "MuiGrid-grid-xl-4",
                                              "grid-xl-5": "MuiGrid-grid-xl-5",
                                              "grid-xl-6": "MuiGrid-grid-xl-6",
                                              "grid-xl-7": "MuiGrid-grid-xl-7",
                                              "grid-xl-8": "MuiGrid-grid-xl-8",
                                              "grid-xl-9": "MuiGrid-grid-xl-9",
                                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                              "grid-xl-true": "MuiGrid-grid-xl-true",
                                              "grid-xs-1": "MuiGrid-grid-xs-1",
                                              "grid-xs-10": "MuiGrid-grid-xs-10",
                                              "grid-xs-11": "MuiGrid-grid-xs-11",
                                              "grid-xs-12": "MuiGrid-grid-xs-12",
                                              "grid-xs-2": "MuiGrid-grid-xs-2",
                                              "grid-xs-3": "MuiGrid-grid-xs-3",
                                              "grid-xs-4": "MuiGrid-grid-xs-4",
                                              "grid-xs-5": "MuiGrid-grid-xs-5",
                                              "grid-xs-6": "MuiGrid-grid-xs-6",
                                              "grid-xs-7": "MuiGrid-grid-xs-7",
                                              "grid-xs-8": "MuiGrid-grid-xs-8",
                                              "grid-xs-9": "MuiGrid-grid-xs-9",
                                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                              "grid-xs-true": "MuiGrid-grid-xs-true",
                                              "item": "MuiGrid-item",
                                              "justify-xs-center": "MuiGrid-justify-xs-center",
                                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                              "root": "MuiGrid-root",
                                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                            }
                                          }
                                          item={true}
                                          xs={12}
                                        >
                                          <div
                                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                                          >
                                            <ButtonWrapper
                                              disabled={false}
                                            >
                                              <WithStyles(ForwardRef(Button))
                                                color="primary"
                                                fullWidth={true}
                                                onClick={[Function]}
                                                variant="contained"
                                              >
                                                <ForwardRef(Button)
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit",
                                                      "contained": "MuiButton-contained",
                                                      "containedPrimary": "MuiButton-containedPrimary",
                                                      "containedSecondary": "MuiButton-containedSecondary",
                                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                      "disableElevation": "MuiButton-disableElevation",
                                                      "disabled": "Mui-disabled",
                                                      "endIcon": "MuiButton-endIcon",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "fullWidth": "MuiButton-fullWidth",
                                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                      "label": "MuiButton-label",
                                                      "outlined": "MuiButton-outlined",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                      "root": "MuiButton-root",
                                                      "sizeLarge": "MuiButton-sizeLarge",
                                                      "sizeSmall": "MuiButton-sizeSmall",
                                                      "startIcon": "MuiButton-startIcon",
                                                      "text": "MuiButton-text",
                                                      "textPrimary": "MuiButton-textPrimary",
                                                      "textSecondary": "MuiButton-textSecondary",
                                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                                    }
                                                  }
                                                  color="primary"
                                                  fullWidth={true}
                                                  onClick={[Function]}
                                                  variant="contained"
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-fullWidth"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-fullWidth"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="button"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-fullWidth"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        <span
                                                          className="MuiButton-label"
                                                        >
                                                           
                                                          Add
                                                           
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </button>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(Button)>
                                              </WithStyles(ForwardRef(Button))>
                                            </ButtonWrapper>
                                          </div>
                                        </ForwardRef(Grid)>
                                      </WithStyles(ForwardRef(Grid))>
                                    </div>
                                  </ForwardRef(Grid)>
                                </WithStyles(ForwardRef(Grid))>
                              </form>
                            </Form>
                          </Formik>
                        </div>
                      </ForwardRef(Container)>
                    </WithStyles(ForwardRef(Container))>
                  </div>
                </ForwardRef(Grid)>
              </WithStyles(ForwardRef(Grid))>
            </div>
          </ForwardRef(Paper)>
        </WithStyles(ForwardRef(Paper))>
      </AddIssueFormik>
       
    </Router>
  </BrowserRouter>
   
</Provider>
`;
